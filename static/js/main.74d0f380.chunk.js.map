{"version":3,"sources":["api.ts","firebaseConfig.ts","store/ducks/currentUser.ts","components/Login.tsx","components/ResponsiveAppBar.tsx","components/HeroTransform.tsx","pages/game1/components/board.tsx","pages/game1/components/playersDrawer.tsx","components/CardHero.tsx","pages/game1/components/handDrawer.tsx","pages/game1/GamePlay.tsx","components/Title.tsx","pages/game1/components/addOrEditRoomModal.tsx","pages/game1/Rooms.tsx","pages/home/index.tsx","pages/admin/addOrEditHeroModal.tsx","pages/admin/index.tsx","pages/store/buyHeroModal.tsx","pages/store/index.tsx","pages/deck/buyHeroModal.tsx","pages/deck/index.tsx","pages/router.tsx","App.tsx","reportWebVitals.ts","store/ducks/index.ts","store/index.ts","index.tsx"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","loginWithFacebookPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","user","id","uid","name","displayName","photoURL","email","loginWithGooglePopup","GoogleAuthProvider","getFirebaseCurrentUser","getAuth","currentUser","onAuthStateChanged","callback","fileUploader","file","userId","onProgress","onError","onComplete","ref","Date","getTime","storageRef","task","put","on","snapshot","getDownloadURL","urlImage","addUser","collection","doc","get","data","set","merge","gems","getUserById","setUser","onSnapshot","response","addOrUpdateHero","hero","add","createdAt","getHeros","heroesRef","getDocs","documentSnapshots","docs","map","getHerosToBuy","q","query","where","getHerosByUserId","getRoomById","getRooms","filterRoom","status","addPlayerToRoom","roomId","heroes","player","roomRef","runTransaction","transaction","then","players","FieldValue","arrayUnion","addOrUpdateRoom","room","INITIAL_STATE","createActions","setLoginAction","setLogoffAction","Types","Creators","createReducer","SET_LOGIN_ACTION","action","SET_LOGOFF_ACTION","connect","state","dispatch","bindActionCreators","userActions","useEffect","handleFacebookLogin","Api","handleGoogleLogin","Grid","container","justifyContent","alignItems","style","height","item","Button","width","variant","onClick","React","anchorElUser","setAnchorElUser","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","Typography","noWrap","component","to","Fab","size","marginRight","Tooltip","title","IconButton","e","currentTarget","p","Avatar","alt","src","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","HeroTransform","parts","partHero","JSON","parse","error","draggable","photosURL","className","Board","cardsInBoard","onSelected","sizes","setAnchorEl","x","y","getSize","heigthList","Array","from","_","i","widthList","TableContainer","Table","backgroundImage","TableRow","backgroundColor","cell","find","h","cellPlayer","color","TableCell","minWidth","padding","border","arrow","cursor","PlayersDrawer","showPlayers","setShowPlayers","currentPlayer","setTurn","Drawer","anchor","PaperProps","spacing","direction","fase","playerId","nickName","CardHero","tipo","toLocaleUpperCase","Card","CardActionArea","CardHeader","enabled","Chip","label","avatar","imgProps","CardContent","paddingTop","paddingBottom","minHeight","margin","description","display","fontSize","attack","defense","HandDrawer","showCards","setShowCards","cardsInHand","heroSelected","setHeroSelected","cardsInDeck","setHeroes","undefined","length","disabled","_a","turns","loc","useLocation","useState","setRoom","turn","currentPlayerId","cardsOfCurrentUser","filter","pathname","split","unsubscribe","api","idx","setRoomDB","r","marginTop","xs","heroSelect","_cell","hrs","MenuListProps","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primary","Title","right","INITIAL_ROOM","onHide","nav","useNavigate","loadHeroes","king","onSave","hr","newRoom","Dialog","fullWidth","DialogTitle","DialogContent","TextField","value","onChange","target","select","DialogActions","modal","setModal","rooms","setRooms","goRoom","herosOfUser","Link","INITIAL_HERO","type","tab","setTab","cloneDeep","setHero","Tabs","b","Tab","parseInt","multiline","rows","price","FormControlLabel","control","Checkbox","checked","aria-label","Add","source","idx2","Badge","badgeContent","splice","Close","maxHeight","htmlFor","multiple","files","index","f","console","log","url","interval","Slider","valueLabelDisplay","marks","event","newValue","min","max","CardActions","Heroes","onBuy","Routers","path","element","GamePlay","loading","firebaseCurrentUser","setFirebaseCurrentUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","persistConfig","key","persistedReducer","persistReducer","reducers","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d0f380.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport {\r\n  query,\r\n  where,\r\n  collection,\r\n  getDocs,\r\n  DocumentData,\r\n  Query,\r\n  FieldValue,\r\n} from \"firebase/firestore\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/compat/firestore\";\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport { IHero, IUser, IRoom, IDeckItem } from \"./types\";\r\nimport { IPlayer } from \"./pages/game1/GamePlay\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  loginWithFacebookPopup: async () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    let result = await app.auth().signInWithPopup(provider);\r\n    if (result.user) {\r\n      const user = {\r\n        id: result.user.uid,\r\n        name: result.user.displayName || \"\",\r\n        photoURL: result.user.photoURL || \"\",\r\n        email: result.user.email || \"\",\r\n      };\r\n      return user;\r\n    }\r\n\r\n    return null;\r\n  },\r\n  loginWithGooglePopup: async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    let result = await app.auth().signInWithPopup(provider);\r\n    if (result.user) {\r\n      const user = {\r\n        id: result.user.uid,\r\n        name: result.user.displayName || \"\",\r\n        photoURL: result.user.photoURL || \"\",\r\n        email: result.user.email || \"\",\r\n      };\r\n      return user;\r\n    }\r\n\r\n    return null;\r\n  },\r\n  getFirebaseCurrentUser: async () => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser; // null if no user\r\n    return user;\r\n  },\r\n  onAuthStateChanged: async (callback: any) => {\r\n    const auth = getAuth();\r\n    return onAuthStateChanged(auth, callback);\r\n  },\r\n  fileUploader: async (\r\n    file: File,\r\n    userId: string,\r\n    onProgress: (e: firebase.storage.UploadTaskSnapshot) => void,\r\n    onError: (e: firebase.storage.FirebaseStorageError) => void,\r\n    onComplete: (url: string) => void\r\n  ) => {\r\n    const storageRef = await storage.ref(\r\n      `arquivos/${userId}/${new Date().getTime()}/${file.name}`\r\n    );\r\n    const task = storageRef.put(file);\r\n    task.on(\"state_changed\", onProgress, onError, async () => {\r\n      const urlImage = await task.snapshot.ref.getDownloadURL();\r\n      onComplete(urlImage);\r\n    });\r\n  },\r\n  addUser: async (user: IUser) => {\r\n    const userDB = await (\r\n      await db.collection(\"users\").doc(user.email).get()\r\n    ).data();\r\n    if (userDB) {\r\n      return await db\r\n        .collection(\"users\")\r\n        .doc(user.email)\r\n        .set(user, { merge: true });\r\n    }\r\n    return await db\r\n      .collection(\"users\")\r\n      .doc(user.email)\r\n      .set({ ...user, gems: 100 }, { merge: true });\r\n  },\r\n  getUserById: async (email: string, setUser: (user: any) => void) => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(email)\r\n      .onSnapshot((response) => {\r\n        setUser(response.data());\r\n      });\r\n  },\r\n  addOrUpdateHero: async (hero: IHero) => {\r\n    if (hero.id) {\r\n      return await db\r\n        .collection(\"heroes\")\r\n        .doc(hero.id)\r\n        .set(hero, { merge: true });\r\n    } else {\r\n      return await db\r\n        .collection(\"heroes\")\r\n        .add({ ...hero, createdAt: new Date() });\r\n    }\r\n  },\r\n  getHeros: async () => {\r\n    const heroesRef = collection(db, \"heroes\");\r\n    const documentSnapshots = await getDocs(heroesRef);\r\n\r\n    return documentSnapshots.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      };\r\n    });\r\n  },\r\n  getHerosToBuy: async () => {\r\n    const heroesRef = collection(db, \"heroes\");\r\n    const q = query(\r\n      heroesRef,\r\n      where(\"userId\", \"==\", \"\"),\r\n      where(\"enabled\", \"==\", true)\r\n    );\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    return documentSnapshots.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      };\r\n    });\r\n  },\r\n  getHerosByUserId: async (userId: string) => {\r\n    const heroesRef = collection(db, \"heroes\");\r\n    const q = query(\r\n      heroesRef,\r\n      where(\"userId\", \"==\", userId),\r\n      where(\"enabled\", \"==\", true)\r\n    );\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    return documentSnapshots.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      };\r\n    });\r\n  },\r\n  getRoomById: (id: string) => {\r\n    return db.collection(\"rooms\").doc(id);\r\n  },\r\n  getRooms: async (filterRoom: IRoom) => {\r\n    let q = query(collection(db, \"rooms\"));\r\n    if (filterRoom.status) {\r\n      q = query(q, where(\"status\", \"==\", filterRoom.status));\r\n    }\r\n\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    return documentSnapshots.docs.map((doc) => {\r\n      debugger;\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      };\r\n    });\r\n  },\r\n  addPlayerToRoom: async (\r\n    roomId: string,\r\n    heroes: IDeckItem[],\r\n    player: IPlayer\r\n  ) => {\r\n    debugger;\r\n    const roomRef = db.collection(\"rooms\").doc(roomId);\r\n    const result = await db.runTransaction((transaction) => {\r\n      return transaction.get(roomRef).then((doc) => {\r\n        const data = doc.data();\r\n\r\n        transaction.set(\r\n          roomRef,\r\n          {\r\n            heroes: [...(data?.heroes || []), ...heroes],\r\n            players: firebase.firestore.FieldValue.arrayUnion(player),\r\n          },\r\n          { merge: true }\r\n        );\r\n      });\r\n    });\r\n    return result;\r\n  },\r\n  addOrUpdateRoom: async (room: IRoom) => {\r\n    if (room.id) {\r\n      return await db\r\n        .collection(\"rooms\")\r\n        .doc(room.id)\r\n        .set(room, { merge: true });\r\n    } else {\r\n      return await db\r\n        .collection(\"rooms\")\r\n        .add({ ...room, createdAt: new Date() });\r\n    }\r\n  },\r\n};\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCdwbDAsGKQ6ji7CrEbwx_Z7CV6Ccz4AO0\",\r\n  authDomain: \"nerd-games.firebaseapp.com\",\r\n  projectId: \"nerd-games\",\r\n  storageBucket: \"nerd-games.appspot.com\",\r\n  messagingSenderId: \"1064259606654\",\r\n  appId: \"1:1064259606654:web:48cee652da9d44d6ac602f\",\r\n  measurementId: \"G-7EBMK1R3Z1\"\r\n}","import { createActions, createReducer } from \"reduxsauce\"\r\nimport { IUser } from \"../../types\";\r\n\r\nconst INITIAL_STATE: IUser = {}\r\n\r\nexport const { Types, Creators } = createActions({\r\n  setLoginAction: [\"user\"],\r\n  setLogoffAction: []\r\n})\r\n\r\nconst setLogin = (state = INITIAL_STATE, action: any) => {\r\n  return { ...action.user };\r\n}\r\n\r\nconst setLogOff = (state = INITIAL_STATE, action: any) => {\r\n  debugger\r\n  return INITIAL_STATE;\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n  [Types.SET_LOGIN_ACTION]: setLogin,\r\n  [Types.SET_LOGOFF_ACTION]: setLogOff,\r\n})","import React, { useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Grid } from \"@mui/material\";\r\n\r\nimport Api from \"../api\";\r\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface Props {\r\n  setLoginAction: any;\r\n  setLogoffAction: any;\r\n}\r\n\r\nfunction Login({ setLoginAction, setLogoffAction }: Props) {\r\n  useEffect(() => {\r\n    setLogoffAction();\r\n    return () => {};\r\n  }, []);\r\n\r\n  const handleFacebookLogin = async () => {\r\n    const user = await Api.loginWithFacebookPopup();\r\n    if (user) {\r\n      await Api.addUser(user);\r\n      Api.getUserById(user.email, setLoginAction);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    const user = await Api.loginWithGooglePopup();\r\n    if (user) {\r\n      await Api.addUser(user);\r\n      Api.getUserById(user.email, setLoginAction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Button\r\n          style={{ width: 300 }}\r\n          variant=\"outlined\"\r\n          onClick={handleFacebookLogin}\r\n        >\r\n          Entrar Com Facebook\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          style={{ width: 300 }}\r\n          variant=\"outlined\"\r\n          onClick={handleGoogleLogin}\r\n        >\r\n          Entrar Com Google\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoginAction: userActions.setLoginAction,\r\n      setLogoffAction: userActions.setLogoffAction\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUser } from '../types';\r\nimport { Fab } from '@mui/material';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\r\n\r\nconst settings = ['Sair'];\r\n\r\ninterface Props {\r\n  currentUser?: IUser,\r\n  setLogoffAction: () => void\r\n}\r\n\r\nconst ResponsiveAppBar = ({ currentUser, setLogoffAction }: Props) => {\r\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n            >\r\n              <Link to=\"/\">NERD-GAMES</Link>\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n              <PaidIcon style={{ marginRight: 8 }} />\r\n              {currentUser?.gems || 0}\r\n            </Fab>\r\n            <Tooltip title={currentUser?.name || \"\"}>\r\n              <IconButton onClick={(e) => setAnchorElUser(e.currentTarget)} sx={{ p: 0 }}>\r\n                <Avatar\r\n                  alt={currentUser?.name || \"\"}\r\n                  src={currentUser?.photoURL || \"\"}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={() => setAnchorElUser(null)}\r\n            >\r\n              <MenuItem onClick={() => {\r\n                setLogoffAction()\r\n                setAnchorElUser(null)\r\n              }}>\r\n                <Typography textAlign=\"center\">Sair</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    setLogoffAction: userActions.setLogoffAction\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResponsiveAppBar)\r\n","import { useEffect, useState } from \"react\";\r\nimport { IHero } from \"../types\";\r\nimport \"animate.css\";\r\n\r\ninterface Props {\r\n  hero: IHero;\r\n}\r\n\r\nconst HeroTransform = ({ hero }: Props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {hero?.parts?.map((partHero) => {\r\n        let style = {};\r\n        try {\r\n          style = JSON.parse(partHero?.style || \"\");\r\n        } catch (error) {}\r\n\r\n        return (\r\n          <img\r\n            alt=\"\"\r\n            draggable={false}\r\n            src={partHero?.photosURL && partHero?.photosURL[0]}\r\n            className={\r\n              partHero?.className && `animate__animated ${partHero?.className}`\r\n            }\r\n            style={{\r\n              ...style,\r\n              position: \"absolute\",\r\n              width: partHero.width + \"%\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroTransform;\r\n","import {\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport HeroTransform from \"../../../components/HeroTransform\";\r\nimport { IDeckItem, IHero } from \"../../../types\";\r\nimport { IPlayer } from \"../GamePlay\";\r\ninterface Props {\r\n  players: IPlayer[];\r\n  cardsInBoard: IDeckItem[];\r\n  size?: string;\r\n  onSelected: (x: number, y: number, e: any) => void;\r\n  anchorEl: null | HTMLElement;\r\n  setAnchorEl: any;\r\n}\r\n\r\nconst getSize = (size?: string) => {\r\n  switch (size) {\r\n    case \"xs\":\r\n      return { x: 10, y: 10 };\r\n    case \"sm\":\r\n      return { x: 20, y: 20 };\r\n    case \"md\":\r\n      return { x: 30, y: 30 };\r\n    case \"lg\":\r\n      return { x: 50, y: 50 };\r\n    case \"xl\":\r\n      return { x: 80, y: 80 };\r\n    default:\r\n      return { x: 120, y: 120 };\r\n  }\r\n};\r\n\r\nfunction Board({\r\n  players,\r\n  cardsInBoard,\r\n  size,\r\n  onSelected,\r\n  anchorEl,\r\n  setAnchorEl,\r\n}: Props) {\r\n  const sizes = getSize(size);\r\n\r\n  const heigthList = Array.from(Array(sizes.y), (_, i) => i + 1);\r\n  const widthList = Array.from(Array(sizes.x), (_, i) => i + 1);\r\n  return (\r\n    <>\r\n      <TableContainer style={{ maxWidth: \"98vw\" }}>\r\n        <Table\r\n          size=\"small\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(https://images.tcdn.com.br/img/img_prod/607564/mural_de_parede_montanhas_1554_2_20180126155300.jpg)\",\r\n          }}\r\n        >\r\n          {heigthList.map((y) => {\r\n            return (\r\n              <TableRow>\r\n                {widthList.map((x) => {\r\n                  let backgroundColor = \"#CCC\";\r\n                  const cell = cardsInBoard.find((h) => h.x === x && h.y === y);\r\n                  if (cell) {\r\n                    const cellPlayer = players.find(\r\n                      (p) => p.id === cell.userId\r\n                    );\r\n                    if (cellPlayer) {\r\n                      backgroundColor = `${cellPlayer.color}`;\r\n                    }\r\n                  }\r\n\r\n                  return (\r\n                    <TableCell\r\n                      key={`cell-${x}-${y}`}\r\n                      style={{\r\n                        height: \"56px\",\r\n                        width: \"56px\",\r\n                        minWidth: \"56px\",\r\n                        padding: 2,\r\n                        border: `2px solid ${backgroundColor}`,\r\n                      }}\r\n                      onClick={(e) => onSelected(x, y, e)}\r\n                    >\r\n                      <>\r\n                        {/* {x === 1 && (\r\n                      <div style={{ position: \"absolute\", marginLeft: -30 }}>\r\n                      {y}\r\n                      </div>\r\n                      )}\r\n                      {y === 1 && (\r\n                        <div style={{ position: \"absolute\", marginTop: -50 }}>\r\n                        {x}\r\n                        </div>\r\n                      )} */}\r\n                        {/* \r\n                      {cell?.tipo && (\r\n                        <Tooltip title={cell?.tipo}>\r\n                        <Avatar\r\n                        style={{ width: \"2vw\", height: \"2vw\" }}\r\n                        variant=\"square\"\r\n                        src={`/frontend/img/${cell?.tipo}.png`}\r\n                        imgProps={{\r\n                          draggable: false,\r\n                        }}\r\n                        />\r\n                        </Tooltip>\r\n                      )} */}\r\n\r\n                        {backgroundColor !== \"#CCC\" && (\r\n                          <Tooltip arrow title={cell?.name || \"Sem tipo\"}>\r\n                            <div\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                              }}\r\n                            >\r\n                              <HeroTransform hero={cell as IHero} />\r\n                            </div>\r\n                          </Tooltip>\r\n                        )}\r\n                      </>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import { Button, Drawer, Grid } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  showPlayers: any;\r\n  setShowPlayers: any;\r\n  players: any;\r\n  currentPlayer: any;\r\n  setTurn: any;\r\n}\r\n\r\nconst PlayersDrawer = ({\r\n  showPlayers,\r\n  setShowPlayers,\r\n  players,\r\n  currentPlayer,\r\n  setTurn,\r\n}: Props) => {\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      PaperProps={{\r\n        style: { backgroundColor: \"#FFF5\" },\r\n      }}\r\n      open={showPlayers.open}\r\n      onClose={() => setShowPlayers({ open: false })}\r\n    >\r\n      <Grid container spacing={1} justifyContent=\"center\" direction=\"column\">\r\n        {players.map((p: any) => {\r\n          return (\r\n            <Grid item>\r\n              <Button\r\n                style={{\r\n                  [p.id === currentPlayer?.id\r\n                    ? \"backgroundColor\"\r\n                    : \"borderColor\"]: p.color,\r\n                  width: 300,\r\n                }}\r\n                variant={p.id === currentPlayer?.id ? \"contained\" : \"outlined\"}\r\n                onClick={() => setTurn({ fase: 0, playerId: p.id })}\r\n              >\r\n                {p.nickName}\r\n              </Button>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PlayersDrawer;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Grid,\r\n  SvgIcon,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { IHero } from \"../types\";\r\nimport HeroTransform from \"./HeroTransform\";\r\n\r\ninterface Props {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  hero: IHero;\r\n}\r\n\r\nconst CardHero = ({ onClick, hero }: Props) => {\r\n  const tipo = (hero?.tipo || \"\").toLocaleUpperCase();\r\n  return (\r\n    <Card style={{ backgroundImage: \"url(/frontend/img/bg.jpg)\" }}>\r\n      <CardActionArea onClick={onClick}>\r\n        <CardHeader\r\n          action={\r\n            !hero.enabled && (\r\n              <Chip color=\"error\" label=\"Rascunho\" variant=\"filled\" />\r\n            )\r\n          }\r\n          avatar={\r\n            <Tooltip title={tipo}>\r\n              <Avatar\r\n                style={{ width: \"2vw\", height: \"2vw\" }}\r\n                variant=\"square\"\r\n                src={`/frontend/img/${hero?.tipo}.png`}\r\n                imgProps={{\r\n                  draggable: false,\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          }\r\n          title={hero.name}\r\n        />\r\n        <CardContent style={{ paddingTop: 0, paddingBottom: 8 }}>\r\n          <div\r\n            style={{\r\n              height: \"12vw\",\r\n              minWidth: \"120px\",\r\n              width: \"12vw\",\r\n              border: \"1px solid #CCC\",\r\n              backgroundColor: \"white\",\r\n              minHeight: \"120px\",\r\n            }}\r\n          >\r\n            <HeroTransform hero={hero} />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#FFFD\",\r\n              margin: \"8px 0\",\r\n              border: \"1px solid #CCC\",\r\n              height: \"5vw\",\r\n              width: \"12vw\",\r\n              minWidth: \"120px\",\r\n              minHeight: \"50px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {hero.description}\r\n            </Typography>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Chip\r\n              color=\"error\"\r\n              style={{ fontSize: 10 }}\r\n              size=\"small\"\r\n              label={`ATK: ${hero.attack}`}\r\n            />\r\n            <Chip\r\n              color=\"warning\"\r\n              style={{ fontSize: 10 }}\r\n              size=\"small\"\r\n              label={`DEF: ${hero.defense}`}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardHero;\r\n","import { Button, Drawer, Grid } from \"@mui/material\";\r\nimport CardHero from \"../../../components/CardHero\";\r\n\r\ninterface Props {\r\n  showCards: any;\r\n  setShowCards: any;\r\n  cardsInHand: any;\r\n  heroSelected: any;\r\n  setHeroSelected: any;\r\n  cardsInDeck: any;\r\n  setHeroes: any;\r\n  heroes: any;\r\n}\r\n\r\nconst HandDrawer = ({\r\n  showCards,\r\n  setShowCards,\r\n  cardsInHand,\r\n  heroSelected,\r\n  setHeroSelected,\r\n  cardsInDeck,\r\n  setHeroes,\r\n  heroes,\r\n}: Props) => {\r\n  return (\r\n    <Drawer\r\n      anchor=\"bottom\"\r\n      PaperProps={{\r\n        style: { backgroundColor: \"#FFF5\" },\r\n      }}\r\n      open={showCards.open}\r\n      onClose={() => setShowCards({ open: false })}\r\n    >\r\n      <Grid container spacing={2} justifyContent=\"center\">\r\n        {cardsInHand.map((p: any) => {\r\n          let border = \"5px solid #CCCCCC\";\r\n          if (heroSelected?.id === p.id) {\r\n            border = \"5px solid blue\";\r\n          }\r\n          return (\r\n            <Grid item>\r\n              <div style={{ border }}>\r\n                <CardHero\r\n                  hero={p}\r\n                  onClick={() => {\r\n                    if (p.id === heroSelected?.id) {\r\n                      setHeroSelected(undefined);\r\n                    } else {\r\n                      setHeroSelected(p);\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          );\r\n        })}\r\n\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            style={{\r\n              backgroundImage: cardsInDeck.length\r\n                ? \"url(https://img.elo7.com.br/product/zoom/2A58C4E/papel-de-parede-carta-baralho-poquer-jogo-cartas-barbearia-papel-de-parede.jpg)\"\r\n                : \"\",\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            disabled={cardsInDeck.length === 0}\r\n            onClick={() =>\r\n              setHeroes(\r\n                heroes.map((_a: any) => {\r\n                  if (_a.id === cardsInDeck[0].id) {\r\n                    return { ..._a, status: 1 };\r\n                  }\r\n                  return _a;\r\n                })\r\n              )\r\n            }\r\n          >\r\n            DECK\r\n            <br />\r\n            {cardsInDeck.length} cartas\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default HandDrawer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Board from \"./components/board\";\r\nimport { IDeckItem, IUser, IRoom } from \"./../../types\";\r\nimport api from \"./../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport PlayersDrawer from \"./components/playersDrawer\";\r\nimport HandDrawer from \"./components/handDrawer\";\r\n\r\nexport interface IPlayer {\r\n  id?: string;\r\n  nickName?: string;\r\n  photoURL?: string;\r\n  color?: string;\r\n}\r\n\r\nconst turns = [\r\n  \"Posicione seus heróis na arena\",\r\n  \"Andar com o seu herói\",\r\n  \"Batalhar\",\r\n  \"Andar com o seu herói\",\r\n  \"Finalizar\",\r\n];\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\n\r\nfunction Game1Play({ currentUser }: Props) {\r\n  const loc = useLocation();\r\n  const [room, setRoom] = useState<IRoom>();\r\n  const players = room?.players || [];\r\n  const heroes = room?.heroes || [];\r\n  const turn = room?.turn || \"\";\r\n  const [heroSelected, setHeroSelected] = useState<IDeckItem>();\r\n  const [showCards, setShowCards] = useState({ open: false });\r\n  const [showPlayers, setShowPlayers] = useState({ open: false });\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const currentPlayer = players.find(\r\n    (x) => x.id === room?.currentPlayerId || \"\"\r\n  );\r\n  const cardsOfCurrentUser = (heroes || []).filter(\r\n    (x) => x.userId === currentUser?.id\r\n  );\r\n  const cardsInDeck = (cardsOfCurrentUser || []).filter((x) => !x.status);\r\n  const cardsInHand = (cardsOfCurrentUser || []).filter((x) => x.status === 1);\r\n  const cardsInBoard = (cardsOfCurrentUser || []).filter((x) => x.status === 2);\r\n\r\n  useEffect(() => {\r\n    const roomId = loc.pathname.split(\"/\")[2];\r\n    const unsubscribe = api.getRoomById(roomId).onSnapshot((doc: any) => {\r\n      setRoom({ ...doc.data(), id: doc.id });\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [loc.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      heroSelected?.id &&\r\n      heroSelected?.status === 2 &&\r\n      heroSelected?.x &&\r\n      heroSelected?.y\r\n    ) {\r\n      api.addOrUpdateRoom({\r\n        id: room?.id,\r\n        heroes: heroes.map((_a, idx) => {\r\n          if (_a.id === heroSelected?.id) {\r\n            return {\r\n              ..._a,\r\n              x: heroSelected?.x || -1,\r\n              y: heroSelected?.y || -1,\r\n              status: 2,\r\n            };\r\n          }\r\n          return _a;\r\n        }),\r\n      });\r\n    }\r\n  }, [heroSelected?.id, heroSelected?.x, heroSelected?.y]);\r\n\r\n  const setRoomDB = (r: IRoom) => {\r\n    if (room?.id) {\r\n      api.addOrUpdateRoom({ id: room.id, ...r });\r\n    }\r\n  };\r\n\r\n  if (!room || !room.status || room?.status === \"wait\") {\r\n    return (\r\n      <Container>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Typography variant=\"h3\">Jogadores</Typography>\r\n\r\n            <List>\r\n              {players.map((p) => {\r\n                return (\r\n                  <ListItem disablePadding>\r\n                    <ListItemButton>\r\n                      <ListItemIcon>\r\n                        <Avatar src={p.photoURL} />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={p.nickName} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Grid>\r\n          {players.length > 1 && (\r\n            <Button onClick={() => setRoomDB({ status: \"in-prograss\" })}>\r\n              Iniciar\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n          {turns[turn || 0]}\r\n        </Grid>\r\n        <Grid item>\r\n          <Board\r\n            size={room?.size}\r\n            players={players}\r\n            cardsInBoard={cardsInBoard}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            onSelected={(x, y, e) => {\r\n              const heroSelect = heroes.find(\r\n                (_cell) => _cell.x === x && _cell.y === y\r\n              );\r\n              if (heroSelect) {\r\n                setHeroSelected(heroSelect);\r\n                setAnchorEl(e.currentTarget);\r\n              } else if (heroSelected?.id) {\r\n                setHeroSelected({ ...heroSelected, x, y, status: 2 });\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://img.elo7.com.br/product/zoom/2A58C4E/papel-de-parede-carta-baralho-poquer-jogo-cartas-barbearia-papel-de-parede.jpg)\",\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() => setShowCards({ open: true })}\r\n          >\r\n            Minha mão\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            // disabled={cardsInDeck.length === 0}\r\n            style={{\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() => setShowPlayers({ open: true })}\r\n          >\r\n            Players\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            // disabled={cardsInDeck.length === 0}\r\n            style={{\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() => setRoomDB({ turn: (turn || 0) + 1 })}\r\n          >\r\n            {turns[(turn || 0) + 1]}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <PlayersDrawer\r\n        currentPlayer={currentPlayer}\r\n        players={players}\r\n        setShowPlayers={setShowPlayers}\r\n        setTurn={() => setRoomDB({ turn: (turn || 0) + 1 })}\r\n        showPlayers={showPlayers}\r\n      />\r\n\r\n      <HandDrawer\r\n        showCards={showCards}\r\n        setShowCards={setShowCards}\r\n        cardsInHand={cardsInHand}\r\n        heroSelected={heroSelected}\r\n        setHeroSelected={setHeroSelected}\r\n        cardsInDeck={cardsInDeck}\r\n        setHeroes={(hrs: any) =>\r\n          api.addOrUpdateRoom({\r\n            id: room?.id,\r\n            heroes: hrs,\r\n          })\r\n        }\r\n        heroes={heroes}\r\n      />\r\n\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => setAnchorEl(null)}>Andar</MenuItem>\r\n        <MenuItem onClick={() => setAnchorEl(null)}>Atacar</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game1Play);\r\n","import { Grid, Typography } from \"@mui/material\"\r\n\r\ninterface Props {\r\n  title: string\r\n  right?: any\r\n}\r\n\r\nconst Title = ({ title, right }: Props) => {\r\n  return (\r\n    <div style={{padding:\"8px 0\"}}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {right}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Title","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport api from \"./../../../api\";\r\nimport Title from \"../../../components/Title\";\r\nimport { IDeckItem, IRoom, IUser } from \"../../../types\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\n\r\ninterface Props {\r\n  onHide: (refresh?: boolean) => void;\r\n  data?: IRoom;\r\n  currentUser?: IUser;\r\n}\r\n\r\nconst INITIAL_ROOM: IRoom = {\r\n  name: \"\",\r\n  status: \"wait\",\r\n  size: \"md\",\r\n};\r\n\r\nconst AddOrEditHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const nav = useNavigate();\r\n  const [room, setRoom] = useState({ ...INITIAL_ROOM, ...data });\r\n\r\n  const loadHeroes = async () => {\r\n    const heroes = await api.getHerosByUserId(`${currentUser?.id}`);\r\n\r\n    const king: IDeckItem = {\r\n      id: currentUser?.id,\r\n      userId: currentUser?.id,\r\n      tipo: \"rei\",\r\n      status: 1,\r\n      attack: 500,\r\n      defense: 2000,\r\n      enabled: true,\r\n      name: `${currentUser?.name}`,\r\n      x: -1,\r\n      y: -1,\r\n      parts: [\r\n        {\r\n          photosURL: [`${currentUser?.photoURL}`],\r\n          width: 100,\r\n          className: \"animate__delay-2s animate__bounce animate__slow\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    return [king, ...heroes] as IDeckItem[];\r\n  };\r\n\r\n  const onSave = async () => {\r\n    const heroes = await loadHeroes();\r\n    const player = {\r\n      id: currentUser?.id,\r\n      color: \"red\",\r\n      nickName: `${currentUser?.name}`,\r\n      photoURL: `${currentUser?.photoURL}`,\r\n    };\r\n    const newRoom = (await api.addOrUpdateRoom({\r\n      ...room,\r\n      currentPlayerId: player.id,\r\n      turn: 0,\r\n      heroes: heroes.map((hr, idx) => {\r\n        if (idx < 4) return { ...hr, status: 1 };\r\n        return hr;\r\n      }),\r\n      players: [player],\r\n    })) as IRoom;\r\n    nav(\"/game/\" + newRoom.id);\r\n    onHide(true);\r\n  };\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Gerar uma sala nova\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nome da Sala\"\r\n              variant=\"filled\"\r\n              value={room?.name}\r\n              onChange={(e) => setRoom({ ...room, name: e.target.value })}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Tamanho\"\r\n              variant=\"filled\"\r\n              value={room.size || \"\"}\r\n              onChange={(e) => setRoom({ ...room, size: e.target.value })}\r\n              select\r\n            >\r\n              <MenuItem value=\"xs\">Super Pequeno</MenuItem>\r\n              <MenuItem value=\"sm\">Pequeno</MenuItem>\r\n              <MenuItem value=\"md\">Médio</MenuItem>\r\n              <MenuItem value=\"lg\">Grande</MenuItem>\r\n              <MenuItem value=\"xg\">Super Grande</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onSave}>Salvar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddOrEditHeroModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Grid, Typography } from \"@mui/material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { IDeckItem, IRoom, IUser } from \"./../../types\";\r\nimport api from \"../../api\";\r\nimport AddOrEditRoomModal from \"./components/addOrEditRoomModal\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\ninterface IModal {\r\n  open: boolean;\r\n  data?: IRoom;\r\n}\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\n\r\nconst Rooms = ({ currentUser }: Props) => {\r\n  const nav = useNavigate();\r\n  const [modal, setModal] = useState<IModal>({ open: false });\r\n  const [rooms, setRooms] = useState<IRoom[]>([]);\r\n\r\n  const loadRooms = () => {\r\n    const filter: IRoom = { status: \"wait\" };\r\n    api.getRooms(filter).then((response) => {\r\n      setRooms(response);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRooms();\r\n  }, []);\r\n\r\n  const loadHeroes = async () => {\r\n    const heroes = await api.getHerosByUserId(`${currentUser?.id}`);\r\n\r\n    const king: IDeckItem = {\r\n      id: currentUser?.id,\r\n      userId: currentUser?.id,\r\n      tipo: \"rei\",\r\n      status: 0,\r\n      attack: 500,\r\n      defense: 2000,\r\n      enabled: true,\r\n      name: `${currentUser?.name}`,\r\n      x: -1,\r\n      y: -1,\r\n      parts: [\r\n        {\r\n          photosURL: [`${currentUser?.photoURL}`],\r\n          width: 100,\r\n          className: \"animate__delay-2s animate__bounce animate__slow\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    return [king, ...heroes];\r\n  };\r\n\r\n  const goRoom = async (id: string | undefined) => {\r\n    const herosOfUser = (await loadHeroes()) as IDeckItem[];\r\n    await api.addPlayerToRoom(\r\n      `${id}`,\r\n      herosOfUser.map((hr, idx) => {\r\n        if (idx < 4) return { ...hr, status: 1 };\r\n        return hr;\r\n      }),\r\n      {\r\n        id: currentUser?.id,\r\n        color: \"red\",\r\n        nickName: `${currentUser?.name}`,\r\n        photoURL: `${currentUser?.photoURL}`,\r\n      }\r\n    );\r\n    nav(`${id}`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h2\" color=\"firebrick\">\r\n            Batalha Naval Xadrez\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" onClick={() => setModal({ open: true })}>\r\n            Nova sala\r\n          </Button>\r\n        </Grid>\r\n\r\n        {rooms.map((r) => {\r\n          return (\r\n            <Grid item key={r.id}>\r\n              <Button onClick={() => goRoom(r.id)}>\r\n                Sala: {r.name} ({r.id})\r\n              </Button>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      {modal.open && (\r\n        <AddOrEditRoomModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false });\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Rooms);\r\n","import React from \"react\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IUser } from \"../../types\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n}\r\n\r\nconst Home = ({ currentUser }: Props) => {\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"center\"\r\n      justifyContent=\"center\" style={{ minHeight: \"70vh\" }}>\r\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n        Ola, {currentUser?.name}\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/admin\" component={Link}>Admin</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/store\" component={Link}>Loja</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game\" component={Link}>Batalha</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/deck\" component={Link}>Meus Deck</Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fab,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Paper,\r\n  Slider,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport {\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  PhotoCamera,\r\n} from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport AddPhotoAlternateIcon from \"@mui/icons-material/AddPhotoAlternate\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n  onHide: (refresh?: boolean) => void;\r\n  data?: IHero;\r\n}\r\n\r\nconst INITIAL_HERO: IHero = {\r\n  name: \"\",\r\n  userId: \"\",\r\n  enabled: false,\r\n  attack: 500,\r\n  defense: 400,\r\n  parts: [{ type: \"head\", width: 100 }],\r\n};\r\n\r\nconst AddOrEditHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [hero, setHero] = useState(cloneDeep({ ...INITIAL_HERO, ...data }));\r\n\r\n  const onSave = async () => {\r\n    await api.addOrUpdateHero(hero);\r\n    onHide(true);\r\n  };\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Cadastro de heroi\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs>\r\n            <Tabs value={tab} onChange={(a, b) => setTab(b)}>\r\n              <Tab label=\"Gerais\"></Tab>\r\n              <Tab label=\"Montagem\"></Tab>\r\n            </Tabs>\r\n            {tab === 0 && (\r\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                <Grid item xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Nome do Herói\"\r\n                    variant=\"filled\"\r\n                    value={hero?.name}\r\n                    onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Tipo\"\r\n                    variant=\"filled\"\r\n                    value={hero.tipo || \"\"}\r\n                    onChange={(e) => setHero({ ...hero, tipo: e.target.value })}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"peao\">Peão</MenuItem>\r\n                    <MenuItem value=\"torre\">Torre</MenuItem>\r\n                    <MenuItem value=\"cavalo\">Cavalo</MenuItem>\r\n                    <MenuItem value=\"bispo\">Bispo</MenuItem>\r\n                    <MenuItem value=\"rainha\">Rainha</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Poder de Ataque\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.attack}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, attack: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Poder de Defesa\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.defense || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, defense: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={2}\r\n                    label=\"Descrição\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.description || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, description: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Preço\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.price || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, price: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControlLabel\r\n                    label=\"Ativo\"\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) =>\r\n                          setHero({ ...hero, enabled: e.target.checked })\r\n                        }\r\n                        checked={hero.enabled}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            {tab === 1 && (\r\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                <Grid item xs={12}>\r\n                  <Title\r\n                    title=\"Montagem\"\r\n                    right={\r\n                      <Fab\r\n                        size=\"small\"\r\n                        variant=\"extended\"\r\n                        onClick={() => {\r\n                          const parts = hero?.parts || [];\r\n                          setHero({\r\n                            ...hero,\r\n                            parts: [\r\n                              ...parts,\r\n                              {\r\n                                width: 100,\r\n                                className: \"\",\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                        aria-label=\"add\"\r\n                      >\r\n                        <AddIcon />\r\n                        Adiconar\r\n                      </Fab>\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {hero?.parts?.map((partHero, idx) => {\r\n                  return (\r\n                    <Grid item xs={12}>\r\n                      <Card>\r\n                        <CardContent>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={4}>\r\n                              <Grid container spacing={2}>\r\n                                {partHero?.photosURL?.map((source, idx2) => {\r\n                                  return (\r\n                                    <Grid item>\r\n                                      <Badge\r\n                                        badgeContent={\r\n                                          <IconButton\r\n                                            onClick={(e) => {\r\n                                              const parts =\r\n                                                hero.parts as IHeroPart[];\r\n                                              const photosURL =\r\n                                                parts[idx].photosURL;\r\n                                              photosURL?.splice(idx2, 1);\r\n                                              parts[idx].photosURL = photosURL;\r\n                                              setHero({ ...hero, parts });\r\n                                            }}\r\n                                          >\r\n                                            <CloseIcon />\r\n                                          </IconButton>\r\n                                        }\r\n                                      >\r\n                                        <img\r\n                                          draggable={false}\r\n                                          style={{ maxHeight: 40 }}\r\n                                          aria-label=\"upload picture\"\r\n                                          src={source}\r\n                                        />\r\n                                      </Badge>\r\n                                    </Grid>\r\n                                  );\r\n                                })}\r\n                                <Grid item>\r\n                                  <label htmlFor={`imput_${idx}`}>\r\n                                    <input\r\n                                      id={`imput_${idx}`}\r\n                                      type=\"file\"\r\n                                      multiple={false}\r\n                                      onChange={async (e) => {\r\n                                        const files = e.target.files;\r\n                                        if (files != null && files.length > 0) {\r\n                                          for (\r\n                                            let index = 0;\r\n                                            index < files.length;\r\n                                            index++\r\n                                          ) {\r\n                                            const f = files[index];\r\n                                            await api.fileUploader(\r\n                                              f,\r\n                                              currentUser?.id || \"sem_id\",\r\n                                              (e) => {\r\n                                                // const perc = e.bytesTransferred / e.totalBytes\r\n                                              },\r\n                                              console.log,\r\n                                              (url) => {\r\n                                                const parts = [\r\n                                                  ...(hero?.parts || []),\r\n                                                ];\r\n                                                const photosURL =\r\n                                                  parts[idx].photosURL || [];\r\n                                                parts[idx].photosURL = [\r\n                                                  ...photosURL,\r\n                                                  url,\r\n                                                ];\r\n                                                setHero({ ...hero, parts });\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <Fab\r\n                                      variant=\"extended\"\r\n                                      size=\"small\"\r\n                                      aria-label=\"upload picture\"\r\n                                      component=\"span\"\r\n                                    >\r\n                                      <AddPhotoAlternateIcon fontSize=\"large\" />\r\n                                      Adicionar\r\n                                    </Fab>\r\n                                  </label>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={9}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label=\"Tipo\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.type}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].type = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                    select\r\n                                  >\r\n                                    <MenuItem value=\"all\">Completo</MenuItem>\r\n                                    <MenuItem value=\"head\">Cabeça</MenuItem>\r\n                                    <MenuItem value=\"body\">Corpo</MenuItem>\r\n                                  </TextField>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    type=\"number\"\r\n                                    label=\"Intervalo\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.interval}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].interval = parseInt(\r\n                                        e.target.value\r\n                                      );\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Slider\r\n                                    aria-label=\"Temperature\"\r\n                                    value={partHero?.width}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    // step={5}\r\n                                    marks\r\n                                    onChange={(event, newValue) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].width = newValue as number;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                    min={0}\r\n                                    max={100}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label=\"Style\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.style}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].style = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label={\"ClassName\"}\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.className}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].className = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </CardContent>\r\n                        <CardActions style={{ justifyContent: \"end\" }}>\r\n                          <Fab\r\n                            onClick={(e) => {\r\n                              const parts = hero.parts as IHeroPart[];\r\n                              parts?.splice(idx, 1);\r\n                              setHero({ ...hero, parts });\r\n                            }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            variant=\"extended\"\r\n                          >\r\n                            Remover\r\n                          </Fab>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <h4>Preview do Herói</h4>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onSave}>Salvar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddOrEditHeroModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Fab, Grid, Icon, IconButton } from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport AddOrEditHeroModal from \"./addOrEditHeroModal\";\r\nimport { Add as AddIcon } from \"@mui/icons-material\";\r\n\r\ninterface IModal {\r\n  open: boolean\r\n  data?: IHero\r\n}\r\n\r\nconst Heroes = () => {\r\n  const [modal, setModal] = useState<IModal>({ open: false })\r\n  const [heroes, setHeroes] = useState<IHero[]>([])\r\n\r\n  const loadHeroes = () => {\r\n    api.getHeros().then(response => {\r\n      setHeroes(response)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadHeroes()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Cadastro de Heróis\" right={(\r\n          <Fab size=\"small\" variant=\"extended\" onClick={() => setModal({ open: true })}>\r\n            <AddIcon />\r\n            adicionar\r\n          </Fab>\r\n        )} />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map(h => {\r\n            return (\r\n              <Grid item>\r\n                <CardHero hero={h} onClick={() => setModal({ open: true, data: h })} />\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n\r\n      {modal.open &&\r\n        <AddOrEditHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false })\r\n            if (r === true) loadHeroes()\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Heroes","import React, { useState } from \"react\";\r\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField, Typography } from \"@mui/material\";\r\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from 'lodash';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n  onHide: (refresh?: boolean) => void\r\n  data?: IHero\r\n}\r\n\r\nconst BuyHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [hero, setHero] = useState(cloneDeep({ ...data, userId: currentUser?.id }))\r\n\r\n  const onBuy = async () => {\r\n    await api.addOrUpdateHero(hero)\r\n    onHide(true)\r\n  }\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Confirmação de compra\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\">\r\n                  Você esta adiquirindo o herói {data?.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  Você pode renomea-lo se quiser.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ width: 350 }}\r\n                  label=\"Nome do Herói\"\r\n                  variant=\"filled\"\r\n                  value={hero?.name}\r\n                  onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                  <PaidIcon style={{ marginRight: 8 }} />\r\n                  {hero.price || \"Free\"}\r\n                </Fab>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onBuy}>\r\n                  Comprar Agora\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BuyHeroModal)","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardActionArea, Container, Fab, Grid, Icon, IconButton, Paper } from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport BuyHeroModal from \"./buyHeroModal\";\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\n\r\ninterface IModal {\r\n  open: boolean\r\n  data?: IHero\r\n}\r\n\r\nconst Heroes = () => {\r\n  const [modal, setModal] = useState<IModal>({ open: false })\r\n  const [heroes, setHeroes] = useState<IHero[]>([])\r\n\r\n  const loadHeroes = () => {\r\n    api.getHerosToBuy().then(response => {\r\n      setHeroes(response)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadHeroes()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Loja de Heróis\" />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map(h => {\r\n            return (\r\n              <Grid item>\r\n                <Card style={{ padding: 8 }}>\r\n                  <CardActionArea onClick={() => setModal({ open: true, data: h })}>\r\n                    <CardHero hero={h} />\r\n                    <div style={{ padding: 8, textAlign: \"center\" }}>\r\n                      <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                        <PaidIcon style={{ marginRight: 8 }} />\r\n                        {h.price || \"Free\"}\r\n                      </Fab>\r\n                    </div>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n\r\n      {modal.open &&\r\n        <BuyHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false })\r\n            if (r === true) loadHeroes()\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Heroes","import React, { useState } from \"react\";\r\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField, Typography } from \"@mui/material\";\r\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from 'lodash';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n  onHide: (refresh?: boolean) => void\r\n  data?: IHero\r\n}\r\n\r\nconst BuyHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [hero, setHero] = useState(cloneDeep({ ...data, userId: currentUser?.id }))\r\n\r\n  const onBuy = async () => {\r\n    await api.addOrUpdateHero(hero)\r\n    onHide(true)\r\n  }\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Confirmação de compra\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\">\r\n                  Você esta adiquirindo o herói {data?.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  Você pode renomea-lo se quiser.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ width: 350 }}\r\n                  label=\"Nome do Herói\"\r\n                  variant=\"filled\"\r\n                  value={hero?.name}\r\n                  onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                  <PaidIcon style={{ marginRight: 8 }} />\r\n                  {hero.price || \"Free\"}\r\n                </Fab>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onBuy}>\r\n                  Comprar Agora\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BuyHeroModal)","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  Container,\r\n  Fab,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport BuyHeroModal from \"./buyHeroModal\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\ninterface IModal {\r\n  open: boolean;\r\n  data?: IHero;\r\n}\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\n\r\nconst Heroes = ({ currentUser }: Props) => {\r\n  const [modal, setModal] = useState<IModal>({ open: false });\r\n  const [heroes, setHeroes] = useState<IHero[]>([]);\r\n\r\n  const loadHeroes = () => {\r\n    if (currentUser?.id) {\r\n      api.getHerosByUserId(currentUser?.id).then((response) => {\r\n        setHeroes(response);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser?.id) {\r\n      loadHeroes();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Meus Heróis\" />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map((h) => {\r\n            return (\r\n              <Grid item>\r\n                <CardHero\r\n                  hero={h}\r\n                  onClick={() => setModal({ open: true, data: h })}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n      {modal.open && (\r\n        <BuyHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false });\r\n            if (r === true) loadHeroes();\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heroes);\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { IUser } from \"../types\";\r\nimport GamePlay from './game1/GamePlay';\r\nimport Rooms from './game1/Rooms';\r\nimport Home from \"./home\";\r\nimport Admin from \"./admin\";\r\nimport Store from \"./store\";\r\nimport Deck from \"./deck\";\r\n\r\n\r\n\r\nconst Routers = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"/game\" element={<Rooms />} />\r\n      <Route path=\"/game/:id\" element={<GamePlay />} />\r\n      <Route path=\"/admin\" element={<Admin />} />\r\n      <Route path=\"/store\" element={<Store />} />\r\n      <Route path=\"/deck\" element={<Deck />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\n\r\nexport default Routers","import { Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport api from \"./api\";\r\nimport Login from \"./components/Login\";\r\nimport ResponsiveAppBar from \"./components/ResponsiveAppBar\";\r\nimport Router from \"./pages/router\";\r\nimport { RootState } from \"./store\";\r\nimport { IUser } from \"./types\";\r\nimport { Creators as userActions } from \"./store/ducks/currentUser\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\nfunction App({ currentUser }: Props) {\r\n  const [firebaseCurrentUser, setFirebaseCurrentUser] = useState({\r\n    loading: true,\r\n    uid: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.onAuthStateChanged((user: any) => {\r\n      setFirebaseCurrentUser({...user, loading: false});\r\n    });\r\n    return () => {};\r\n  }, []);\r\n\r\n  if (firebaseCurrentUser.loading) {\r\n    return <Typography>Carregando...</Typography>;\r\n  }\r\n\r\n  if (!currentUser?.id || currentUser?.id !== firebaseCurrentUser.uid) {\r\n    return <Login />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveAppBar />\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators(\r\n    {\r\n      setLogoffAction: userActions.setLogoffAction,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\"\r\nimport currentUser from \"./currentUser\"\r\n\r\nexport default combineReducers({\r\n  currentUser\r\n})","import { createStore } from \"redux\"\r\n\r\nimport reducers from \"./ducks\"\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n \r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\nlet store = createStore(persistedReducer)\r\nlet persistor = persistStore(store)\r\n \r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport { store, persistor }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\"\r\nimport { store, persistor } from \"./store\"\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}