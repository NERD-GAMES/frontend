{"version":3,"sources":["api.ts","firebaseConfig.ts","store/ducks/currentUser.ts","components/Login.tsx","components/ResponsiveAppBar.tsx","pages/game1/components/board.tsx","components/CardHero.tsx","pages/game1/GamePlay.tsx","components/Title.tsx","pages/game1/components/addOrEditRoomModal.tsx","pages/game1/Rooms.tsx","pages/home/index.tsx","pages/admin/addOrEditHeroModal.tsx","pages/admin/index.tsx","pages/store/buyHeroModal.tsx","pages/store/index.tsx","pages/router.tsx","App.tsx","reportWebVitals.ts","store/ducks/index.ts","store/index.ts","index.tsx"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","loginWithFacebookPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","user","id","uid","name","displayName","photoURL","email","loginWithGooglePopup","GoogleAuthProvider","fileUploader","file","userId","onProgress","onError","onComplete","ref","Date","getTime","storageRef","task","put","on","snapshot","getDownloadURL","urlImage","addUser","collection","doc","get","data","set","merge","gems","getUserById","setUser","onSnapshot","response","addOrUpdateHero","hero","add","createdAt","getHeros","heroesRef","getDocs","documentSnapshots","docs","map","getHerosToBuy","q","query","where","getRoomById","setRoom","getRooms","filterRoom","orderBy","addOrUpdateRoom","room","INITIAL_STATE","createActions","setLoginAction","setLogoffAction","Types","Creators","createReducer","SET_LOGIN_ACTION","action","SET_LOGOFF_ACTION","connect","state","currentUser","dispatch","bindActionCreators","userActions","handleFacebookLogin","Api","handleGoogleLogin","Grid","container","justifyContent","alignItems","style","height","item","Button","width","variant","onClick","React","anchorElUser","setAnchorElUser","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","Typography","noWrap","component","to","Fab","size","marginRight","Tooltip","title","IconButton","e","currentTarget","p","Avatar","alt","src","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","Board","players","cardsInBoard","onSelected","sizes","x","y","getSize","heigthList","Array","from","_","i","widthList","Table","backgroundImage","TableRow","backgroundColor","cell","find","h","cellPlayer","color","TableCell","border","padding","display","draggable","maxHeight","CardHero","tipo","toLocaleUpperCase","Card","CardActionArea","CardHeader","avatar","imgProps","CardContent","parts","partHero","JSON","parse","error","photosURL","className","fill","spacing","marginTop","Chip","label","attack","defense","xs","description","turns","nickName","loc","useLocation","useState","playerId","fase","turn","setTurn","heroes","setHeroes","heroSelected","setHeroSelected","currentPlayer","cardsOfCurrentUser","filter","cardsInDeck","status","cardsInHand","useEffect","roomId","pathname","split","api","then","newDeck","d","_a","idx","undefined","direction","length","disabled","Title","right","INITIAL_HERO","AddOrEditHeroModal","onHide","nav","useNavigate","onSave","newRoom","Dialog","fullWidth","DialogTitle","DialogContent","TextField","value","onChange","target","select","DialogActions","Game1Rooms","modal","setModal","rooms","setRooms","r","minHeight","LinkRoute","enabled","type","tab","setTab","cloneDeep","setHero","Tabs","b","Tab","parseInt","multiline","rows","price","FormControlLabel","control","Checkbox","checked","aria-label","Add","source","idx2","Badge","badgeContent","splice","Close","htmlFor","multiple","files","index","f","console","log","url","fontSize","interval","CardActions","Heroes","loadHeroes","onBuy","Routers","path","element","Rooms","GamePlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","persistConfig","key","persistedReducer","persistReducer","reducers","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ef4122b8.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport { query, where, collection, getDocs } from \"firebase/firestore\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\nimport { firebaseConfig } from \"./firebaseConfig\"\nimport { IHero, IUser, IRoom } from './types';\n\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\nconst storage = firebase.storage()\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  loginWithFacebookPopup: async () => {\n    const provider = new firebase.auth.FacebookAuthProvider()\n    let result = await app.auth().signInWithPopup(provider)\n    if (result.user) {\n      const user = {\n        id: result.user.uid,\n        name: result.user.displayName || \"\",\n        photoURL: result.user.photoURL || \"\",\n        email: result.user.email || \"\"\n      }\n      return user\n    }\n\n    return null\n\n  },\n  loginWithGooglePopup: async () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    let result = await app.auth().signInWithPopup(provider)\n    if (result.user) {\n      const user = {\n        id: result.user.uid,\n        name: result.user.displayName || \"\",\n        photoURL: result.user.photoURL || \"\",\n        email: result.user.email || \"\"\n      }\n      return user\n    }\n\n    return null\n\n  },\n  fileUploader: async (file: File, userId: string, onProgress: (e: firebase.storage.UploadTaskSnapshot) => void, onError: (e: firebase.storage.FirebaseStorageError) => void, onComplete: (url: string) => void) => {\n    const storageRef = await storage.ref(`arquivos/${userId}/${new Date().getTime()}/${file.name}`)\n    const task = storageRef.put(file)\n    task.on(\"state_changed\", onProgress, onError, async () => {\n      const urlImage = await task.snapshot.ref.getDownloadURL()\n      onComplete(urlImage)\n    })\n  },\n  addUser: async (user: IUser) => {\n    debugger\n    const userDB = await (await db.collection(\"users\").doc(user.email).get()).data()\n    if (userDB) {\n      return await db.collection(\"users\").doc(user.email).set(user, { merge: true })\n    }\n    return await db.collection(\"users\").doc(user.email).set({ ...user, gems: 100 }, { merge: true })\n  },\n  getUserById: async (email: string, setUser: (user: any) => void) => {\n    await db.collection(\"users\").doc(email).onSnapshot((response) => {\n      setUser(response.data())\n    })\n  },\n  addOrUpdateHero: async (hero: IHero) => {\n    if (hero.id) {\n      return await db.collection(\"heroes\").doc(hero.id).set(hero, { merge: true })\n    } else {\n      return await db.collection(\"heroes\").add({ ...hero, createdAt: new Date() })\n    }\n  },\n  getHeros: async () => {\n    const heroesRef = collection(db, 'heroes');\n    const documentSnapshots = await getDocs(heroesRef);\n\n    return documentSnapshots.docs.map(doc => {\n      return {\n        id: doc.id, ...doc.data()\n      }\n    })\n  },\n  getHerosToBuy: async () => {\n    const heroesRef = collection(db, 'heroes');\n    const q = query(heroesRef, where(\"userId\", '==', ''), where(\"enabled\", '==', true));\n    const documentSnapshots = await getDocs(q);\n\n    return documentSnapshots.docs.map(doc => {\n      return {\n        id: doc.id, ...doc.data()\n      }\n    })\n  },\n  getRoomById: async (id: string, setRoom: React.Dispatch<React.SetStateAction<IRoom | undefined>>) => {\n    await db.collection(\"rooms\").doc(id).onSnapshot((response) => {\n      setRoom(response.data())\n    })\n  },\n  getRooms: async (filterRoom: IRoom) => {\n    const snapshot = await db.collection(\"rooms\").orderBy(\"createdAt\", \"desc\").get()\n    return snapshot.docs.map(doc => {\n      return {\n        id: doc.id, ...doc.data()\n      }\n    })\n  },\n  addOrUpdateRoom: async (room: IRoom) => {\n    if (room.id) {\n      return await db.collection(\"rooms\").doc(room.id).set(room, { merge: true })\n    } else {\n      return await db.collection(\"rooms\").add({ ...room, createdAt: new Date() })\n    }\n  },\n}","export const firebaseConfig = {\n  apiKey: \"AIzaSyCdwbDAsGKQ6ji7CrEbwx_Z7CV6Ccz4AO0\",\n  authDomain: \"nerd-games.firebaseapp.com\",\n  projectId: \"nerd-games\",\n  storageBucket: \"nerd-games.appspot.com\",\n  messagingSenderId: \"1064259606654\",\n  appId: \"1:1064259606654:web:48cee652da9d44d6ac602f\",\n  measurementId: \"G-7EBMK1R3Z1\"\n}","import { createActions, createReducer } from \"reduxsauce\"\nimport { IUser } from \"../../types\";\n\nconst INITIAL_STATE: IUser = {}\n\nexport const { Types, Creators } = createActions({\n  setLoginAction: [\"user\"],\n  setLogoffAction: []\n})\n\nconst setLogin = (state = INITIAL_STATE, action: any) => {\n  debugger\n  return { ...action.user };\n}\n\nconst setLogOff = (state = INITIAL_STATE, action: any) => {\n  return INITIAL_STATE;\n}\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SET_LOGIN_ACTION]: setLogin,\n  [Types.SET_LOGOFF_ACTION]: setLogOff,\n})","import React, { Dispatch, SetStateAction } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Grid } from '@mui/material';\n\nimport Api from '../api';\nimport { IUser } from '../types';\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\nimport { RootState } from '../store';\n\n\ninterface Props {\n  setLoginAction: any\n}\n\nfunction Login({ setLoginAction }: Props) {\n\n  const handleFacebookLogin = async () => {\n    const user = await Api.loginWithFacebookPopup()\n    if (user) {\n      await Api.addUser(user)\n      Api.getUserById(user.email, setLoginAction)\n    }\n  }\n\n  const handleGoogleLogin = async () => {\n    const user = await Api.loginWithGooglePopup()\n    if (user) {\n      await Api.addUser(user)\n      Api.getUserById(user.email, setLoginAction)\n    }\n  }\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ height: \"100vh\" }}>\n      <Grid item>\n        <Button\n          style={{ width: 300 }}\n          variant=\"outlined\"\n          onClick={handleFacebookLogin} >\n          Entrar Com Facebook\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          style={{ width: 300 }}\n          variant=\"outlined\"\n          onClick={handleGoogleLogin} >\n          Entrar Com Google\n        </Button>\n      </Grid>\n    </Grid >\n  );\n}\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return bindActionCreators({\n    setLoginAction: userActions.setLoginAction\n  }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login)\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Link } from 'react-router-dom';\nimport { IUser } from '../types';\nimport { Fab } from '@mui/material';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport { connect } from 'react-redux';\nimport { RootState } from '../store';\nimport { bindActionCreators } from 'redux';\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\n\nconst settings = ['Sair'];\n\ninterface Props {\n  currentUser?: IUser,\n  setLogoffAction: () => void\n}\n\nconst ResponsiveAppBar = ({ currentUser, setLogoffAction }: Props) => {\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n            >\n              <Link to=\"/\">NERD-GAMES</Link>\n            </Typography>\n          </Box>\n          <Box sx={{ flexGrow: 0 }}>\n            <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\n              <PaidIcon style={{ marginRight: 8 }} />\n              {currentUser?.gems || 0}\n            </Fab>\n            <Tooltip title={currentUser?.name || \"\"}>\n              <IconButton onClick={(e) => setAnchorElUser(e.currentTarget)} sx={{ p: 0 }}>\n                <Avatar\n                  alt={currentUser?.name || \"\"}\n                  src={currentUser?.photoURL || \"\"}\n                />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={() => setAnchorElUser(null)}\n            >\n              <MenuItem onClick={() => {\n                setLogoffAction()\n                setAnchorElUser(null)\n              }}>\n                <Typography textAlign=\"center\">Sair</Typography>\n              </MenuItem>\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return bindActionCreators({\n    setLogoffAction: userActions.setLogoffAction\n  }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResponsiveAppBar)\n","import { Table, TableCell, TableRow } from '@mui/material';\nimport { IDeckItem } from '../../../types';\nimport { IPlayer } from '../GamePlay';\n\ninterface Props {\n  players: IPlayer[]\n  cardsInBoard: IDeckItem[]\n  size?: string,\n  onSelected: (x: number, y: number) => void\n}\n\nconst getSize = (size?: string) => {\n  switch (size) {\n    case \"xs\":\n      return { x: 10, y: 10 }\n    case \"sm\":\n      return { x: 20, y: 20 }\n    case \"md\":\n      return { x: 30, y: 30 }\n    case \"lg\":\n      return { x: 50, y: 50 }\n    case \"xl\":\n      return { x: 80, y: 80 }\n    default:\n      return { x: 120, y: 120 }\n  }\n}\n\n\nfunction Board({ players, cardsInBoard, size, onSelected }: Props) {\n  const sizes = getSize(size)\n  const heigthList = Array.from(Array(sizes.y), (_, i) => i + 1)\n  const widthList = Array.from(Array(sizes.x), (_, i) => i + 1)\n\n  return (\n    <Table style={{ backgroundImage: \"url(https://images.tcdn.com.br/img/img_prod/607564/mural_de_parede_montanhas_1554_2_20180126155300.jpg)\" }}>\n      {heigthList.map(y => {\n        return (\n          <TableRow>\n            {widthList.map(x => {\n              let backgroundColor = \"\"\n              const cell = cardsInBoard.find(h => (h.x === x && h.y === y))\n              if (cell) {\n                const cellPlayer = players.find(p => p.id === cell.userId)\n                if (cellPlayer) {\n                  backgroundColor = cellPlayer.color\n                }\n              }\n\n              return (\n                <TableCell\n                  style={{\n                    border: \"1px solid #ddd\",\n                    padding: 0,\n                    height: 56,\n                    width: 56,\n                  }}\n                  onClick={() => onSelected(x, y)}\n                >\n                  {backgroundColor &&\n                    <div style={{\n                      display: \"flex\", alignItems: \"center\",\n                      border: `3px solid ${backgroundColor}`\n                    }}>\n                      {cell?.photoURL &&\n                        <img\n                          draggable={false}\n                          style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                          src={cell.photoURL}\n                          alt=\"hero\"\n                        />\n                      }\n                    </div>\n                  }\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        )\n      })}\n    </Table>\n  );\n}\n\nexport default Board;\n","import { Avatar, Card, CardActionArea, CardContent, CardHeader, Chip, Grid, Tooltip, Typography } from \"@mui/material\"\nimport { IHero } from \"../types\"\nimport 'animate.css';\n\n\ninterface Props {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n  hero: IHero\n}\n\nconst CardHero = ({ onClick, hero }: Props) => {\n  const tipo = (hero?.tipo || \"\").toLocaleUpperCase()\n  return (\n    <Card sx={{ width: 345, backgroundImage: \"url(/frontend/img/bg.jpg)\" }} >\n      <CardActionArea onClick={onClick}>\n        <CardHeader\n          avatar={\n            <Tooltip title={tipo}>\n              <Avatar\n                variant=\"square\"\n                src={`/frontend/img/${hero?.tipo}.png`}\n                imgProps={{\n                  draggable: false\n                }}\n              />\n            </Tooltip>\n          }\n          title={hero.name}\n        />\n        <CardContent >\n          <div\n            style={{\n              position: \"relative\", height: 300, border: \"1px solid #CCC\",\n              backgroundColor: \"white\"\n            }}>\n\n            {hero?.parts?.map((partHero) => {\n              let style = {}\n              try {\n                style = JSON.parse(partHero?.style || \"\")\n              } catch (error) {\n\n              }\n\n              return (\n                <img\n                  alt=\"\"\n                  draggable={false}\n                  src={partHero?.photosURL && partHero?.photosURL[0]}\n                  className={partHero?.className}\n                  style={{ ...style, position: \"absolute\", fill: \"yellow\" }}\n                />\n              )\n            })}\n          </div>\n\n\n          <Grid container spacing={2} justifyContent=\"space-between\" style={{ marginTop: 4 }}>\n            <Grid item>\n              <Chip color=\"secondary\" size=\"small\" label={`Ataque: ${hero.attack}`} />\n            </Grid>\n            <Grid item>\n              <Chip color=\"secondary\" size=\"small\" label={`Defesa: ${hero.defense}`} />\n            </Grid>\n            <Grid item xs={12}>\n              <div style={{ backgroundColor: \"#FFFD\", padding: 8, height: 60 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {hero.description}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\n\nexport default CardHero","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Grid, Typography } from '@mui/material';\nimport Board from './components/board';\nimport CardHero from './../../components/CardHero';\nimport { IDeckItem, IUser, IHero, IRoom } from './../../types';\nimport api from './../../api';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../store';\n\nexport interface IPlayer {\n  id: string\n  nickName: string\n  color: string\n}\n\nconst turns = [\n  \"Posicionar cartas\",\n  \"Andar\",\n  \"Batalha\",\n  \"Andar\",\n  \"Finalizar\"\n]\n\nconst players: IPlayer[] = [\n  { id: \"yaB5gAe6UFNc3TaJwnWfnBigjKT2\", color: \"red\", nickName: \"Everton\" },\n  { id: \"nlw8y6cU4NhbTtrXSMvKokqNpz23\", color: \"blue\", nickName: \"Ana\" },\n]\n\ninterface Props {\n  currentUser?: IUser\n}\n\nfunction Game1Play({ currentUser }: Props) {\n  const loc = useLocation()\n  const [turn, setTurn] = useState({ playerId: players[0].id, fase: 0 })\n  const [room, setRoom] = useState<IRoom>()\n  const [heroes, setHeroes] = useState<IDeckItem[]>([])\n  const [heroSelected, setHeroSelected] = useState<IDeckItem>()\n\n  const currentPlayer = players.find(x => x.id === turn.playerId)\n  const cardsOfCurrentUser = (heroes || []).filter(x => x.userId === currentUser?.id)\n  const cardsOfCurrentPlayer = (heroes || []).filter(x => x.userId === turn.playerId)\n  const cardsInDeck = (cardsOfCurrentUser || []).filter(x => x.status === 0)\n  const cardsInHand = (cardsOfCurrentUser || []).filter(x => x.status === 1)\n  const cardsInBoard = (cardsOfCurrentUser || []).filter(x => x.status === 2)\n\n  useEffect(() => {\n    const roomId = loc.pathname.split(\"/\")[2]\n    api.getRoomById(roomId, setRoom)\n  }, [loc.pathname])\n\n  const loadHeroes = () => {\n    api.getHeros().then((response) => {\n      const deck = response as IDeckItem[]\n      const newDeck = deck.map(d => {\n        return {\n          ...d,\n          status: 0\n        }\n      })\n      setHeroes(newDeck)\n    })\n  }\n\n  useEffect(() => {\n    loadHeroes()\n  }, [])\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item >\n          <Board\n            size={room?.size}\n            players={players}\n            cardsInBoard={cardsInBoard}\n            onSelected={(x, y) => {\n              setHeroes(heroes.map((_a, idx) => {\n                if (_a.id === heroSelected?.id) {\n                  return { ..._a, x, y, status: 2 }\n                }\n                return _a\n              }))\n              setHeroSelected(undefined)\n            }}\n          />\n        </Grid>\n        <Grid item>\n\n          <Grid container spacing={1} justifyContent=\"center\" direction=\"column\">\n            {players.map((p, idx) => {\n              return (\n                <Grid item>\n                  <Button\n                    style={{ [p.id === currentPlayer?.id ? \"backgroundColor\" : \"borderColor\"]: p.color, width: 300 }}\n                    variant={p.id === currentPlayer?.id ? \"contained\" : \"outlined\"}\n                    onClick={() => setTurn({ fase: 0, playerId: p.id })}>\n                    {p.nickName}\n                  </Button>\n                </Grid>\n              )\n            })}\n            <Grid item>\n              <Button\n                style={{ width: 300, padding: 50, marginTop: 50 }}\n                size=\"large\"\n                variant=\"outlined\" onClick={() => setTurn({\n                  ...turn,\n                  fase: turn.fase + 1\n                })}>{turns[turn.fase + 1]}\n              </Button>\n            </Grid>\n          </Grid>\n\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Typography variant=\"h3\">\n            É a vez de {players.find(p => p?.id === currentPlayer?.id)?.nickName}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2} justifyContent=\"center\">\n            {cardsInHand.map((p, idx) => {\n              let border = \"5px solid #CCCCCC\"\n              if (heroSelected?.id === p.id) {\n                border = \"5px solid blue\"\n              }\n\n              return (\n                <Grid item sx={{ marginTop: (heroSelected == null || heroSelected?.id === p.id) ? 0 : 10 }}>\n                  <div style={{ border }}>\n                    <CardHero hero={p} onClick={() => setHeroSelected(p)} />\n                  </div>\n                </Grid>\n              )\n            })}\n            {cardsInDeck.length > 0 &&\n              <Grid item>\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  style={{\n                    backgroundImage: \"url(https://img.elo7.com.br/product/zoom/2A58C4E/papel-de-parede-carta-baralho-poquer-jogo-cartas-barbearia-papel-de-parede.jpg)\",\n                    border: \"1px solid #CCC\",\n                    width: 300,\n                    height: 415\n                  }}\n                  disabled={cardsInDeck.length === 0}\n                  onClick={() => setHeroes(heroes.map(_a => {\n                    if (_a.id === cardsInDeck[0].id) {\n                      return { ..._a, status: 1 }\n                    }\n                    return _a\n                  }))}>\n                  DECK\n                  <br />\n                  {cardsInDeck.length} cartas\n                </Button>\n              </Grid>\n            }\n          </Grid>\n        </Grid>\n      </Grid >\n    </>\n  );\n}\n\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(Game1Play)\n","import { Grid, Typography } from \"@mui/material\"\n\ninterface Props {\n  title: string\n  right?: any\n}\n\nconst Title = ({ title, right }: Props) => {\n  return (\n    <div style={{padding:\"8px 0\"}}>\n      <Grid container justifyContent=\"space-between\">\n        <Grid item>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {right}\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\n\nexport default Title","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, TextField } from \"@mui/material\";\nimport api from \"./../../../api\";\nimport Title from \"../../../components/Title\";\nimport { IRoom, IUser } from \"../../../types\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../../store\";\n\ninterface Props {\n  onHide: (refresh?: boolean) => void\n  data?: IRoom\n}\n\nconst INITIAL_HERO: IRoom = {\n  name: \"\",\n  size: \"md\"\n}\n\nconst AddOrEditHeroModal = ({ onHide, data }: Props) => {\n  const nav = useNavigate()\n  const [room, setRoom] = useState({ ...INITIAL_HERO, ...data })\n\n  const onSave = async () => {\n    const newRoom = await api.addOrUpdateRoom(room) as IRoom\n    nav(\"/game1/\" + newRoom.id)\n    onHide(true)\n  }\n\n  return (\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\n      <DialogTitle>\n        <Title title=\"Gerar uma sala nova\" />\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={9}>\n            <TextField\n              fullWidth\n              label=\"Nome da Sala\"\n              variant=\"filled\"\n              value={room?.name}\n              onChange={(e) => setRoom({ ...room, name: e.target.value })}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              fullWidth\n              label=\"Tamanho\"\n              variant=\"filled\"\n              value={room.size || \"\"}\n              onChange={(e) => setRoom({ ...room, size: e.target.value })}\n              select\n            >\n              <MenuItem value=\"xs\">Super Pequeno</MenuItem>\n              <MenuItem value=\"sm\">Pequeno</MenuItem>\n              <MenuItem value=\"md\">Médio</MenuItem>\n              <MenuItem value=\"lg\">Grande</MenuItem>\n              <MenuItem value=\"xg\">Super Grande</MenuItem>\n            </TextField>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSave}>Salvar</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default AddOrEditHeroModal","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Typography } from \"@mui/material\";\nimport { IRoom, IUser } from \"./../../types\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../api\";\nimport AddOrEditRoomModal from \"./components/addOrEditRoomModal\";\n\ninterface IModal {\n  open: boolean\n  data?: IRoom\n}\n\nconst Game1Rooms = () => {\n  const [modal, setModal] = useState<IModal>({ open: false })\n  const [rooms, setRooms] = useState<IRoom[]>([])\n\n  const loadRooms = () => {\n    const filter: IRoom = {}\n    api.getRooms(filter).then(response => {\n      setRooms(response)\n    })\n  }\n\n  useEffect(() => {\n    loadRooms()\n  }, [])\n\n  return (\n    <>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\"\n        justifyContent=\"center\" style={{ height: \"100vh\" }}>\n        <Grid item>\n          <Typography variant=\"h2\" color=\"firebrick\">\n            Batalha Naval Xadrez\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h5\" color=\"firebrick\">\n            Batalha Naval\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            onClick={() => setModal({ open: true })}\n          >Nova sala</Button>\n        </Grid>\n\n        {rooms.map(r => {\n          return (\n            <Grid item key={r.id}>\n              <Link to={`/game1/${r.id}`}>Sala: {r.name} ({r.id})</Link>\n            </Grid>\n          )\n        })}\n      </Grid>\n\n      {modal.open &&\n        <AddOrEditRoomModal\n          data={modal.data}\n          onHide={(r) => {\n            setModal({ open: false })\n          }}\n        />\n      }\n    </>\n  )\n}\n\n\nexport default Game1Rooms","import React from \"react\";\nimport { Button, Grid, Link } from \"@mui/material\";\nimport { Link as LinkRoute } from \"react-router-dom\";\nimport { IUser } from \"../../types\";\nimport { RootState } from \"../../store\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  currentUser?: IUser\n}\n\nconst Home = ({ currentUser }: Props) => {\n  return (\n    <Grid container spacing={2} alignItems=\"center\"\n      justifyContent=\"center\" style={{ minHeight: \"70vh\" }}>\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\n        Ola, {currentUser?.name}\n      </Grid>\n      <Grid item>\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game1/admin\" component={LinkRoute}>Admin</Button>\n      </Grid>\n      <Grid item>\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game1/store\" component={LinkRoute}>Loja</Button>\n      </Grid>\n      <Grid item>\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game1\" component={LinkRoute}>\n          Batalha\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game1/Decks\" component={LinkRoute}>Meus Deck</Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(Home)","import React, { useState } from \"react\";\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField } from \"@mui/material\";\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\nimport api from \"../../api\";\nimport CardHero from \"../../components/CardHero\";\nimport Title from \"../../components/Title\";\nimport { IHero, IHeroPart, IUser } from \"../../types\";\nimport { cloneDeep } from 'lodash';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { RootState } from \"../../store\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  currentUser?: IUser\n  onHide: (refresh?: boolean) => void\n  data?: IHero\n}\n\nconst INITIAL_HERO: IHero = {\n  name: \"\",\n  userId: \"\",\n  enabled: false,\n  attack: 500,\n  defense: 400,\n  parts: [{ type: \"head\" }]\n}\n\nconst AddOrEditHeroModal = ({ onHide, data, currentUser }: Props) => {\n  const [tab, setTab] = useState(0)\n  const [hero, setHero] = useState(cloneDeep({ ...INITIAL_HERO, ...data }))\n\n  const onSave = async () => {\n    await api.addOrUpdateHero(hero)\n    onHide(true)\n  }\n\n  return (\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\n      <DialogTitle>\n        <Title title=\"Cadastro de heroi\" />\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs>\n\n            <Tabs value={tab} onChange={(a, b) => setTab(b)}>\n              <Tab label=\"Gerais\"></Tab>\n              <Tab label=\"Montagem\"></Tab>\n            </Tabs>\n            {tab === 0 &&\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\n                <Grid item xs={9}>\n                  <TextField\n                    fullWidth\n                    label=\"Nome do Herói\"\n                    variant=\"filled\"\n                    value={hero?.name}\n                    onChange={(e) => setHero({ ...hero, name: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Tipo\"\n                    variant=\"filled\"\n                    value={hero.tipo || \"\"}\n                    onChange={(e) => setHero({ ...hero, tipo: e.target.value })}\n                    select>\n                    <MenuItem value=\"peao\">Peão</MenuItem>\n                    <MenuItem value=\"torre\">Torre</MenuItem>\n                    <MenuItem value=\"cavalo\">Cavalo</MenuItem>\n                    <MenuItem value=\"bispo\">Bispo</MenuItem>\n                    <MenuItem value=\"rainha\">Rainha</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Poder de Ataque\"\n                    variant=\"filled\"\n                    type=\"number\"\n                    value={hero.attack}\n                    onChange={(e) => setHero({ ...hero, attack: parseInt(e.target.value) })}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Poder de Defesa\"\n                    variant=\"filled\"\n                    type=\"number\"\n                    value={hero.defense || \"\"}\n                    onChange={(e) => setHero({ ...hero, defense: parseInt(e.target.value) })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    multiline\n                    rows={2}\n                    label=\"Descrição\"\n                    variant=\"filled\"\n                    type=\"number\"\n                    value={hero.description || \"\"}\n                    onChange={(e) => setHero({ ...hero, description: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    type=\"number\"\n                    value={hero.price || \"\"}\n                    onChange={(e) => setHero({ ...hero, price: parseInt(e.target.value) })}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControlLabel\n                    label=\"Ativo\"\n                    control={\n                      <Checkbox\n                        onChange={(e) => setHero({ ...hero, enabled: e.target.checked })}\n                        checked={hero.enabled}\n                      />\n                    }\n                  />\n                </Grid>\n              </Grid>\n            }\n\n            {tab === 1 &&\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\n                <Grid item xs={12}>\n                  <Title title=\"Montagem\"\n                    right={(\n                      <Fab\n                        size=\"small\"\n                        variant=\"extended\"\n                        onClick={() => {\n                          const parts = hero?.parts || []\n                          setHero({ ...hero, parts: [...parts, {}] })\n                        }} aria-label=\"add\">\n                        <AddIcon />\n                        Adiconar\n                      </Fab>\n                    )}\n                  />\n                </Grid>\n                {hero?.parts?.map((partHero, idx) => {\n                  return (\n                    <Grid item xs={12}>\n                      <Card>\n                        <CardContent>\n                          <Grid container spacing={2}>\n                            <Grid item xs={4}>\n                              <Grid container spacing={2}>\n                                {partHero?.photosURL?.map((source, idx2) => {\n                                  return (\n                                    <Grid item>\n                                      <Badge badgeContent={\n                                        <IconButton\n                                          onClick={(e) => {\n                                            const parts = hero.parts as IHeroPart[]\n                                            const photosURL = parts[idx].photosURL\n                                            photosURL?.splice(idx2, 1)\n                                            parts[idx].photosURL = photosURL\n                                            setHero({ ...hero, parts })\n                                          }}\n                                        >\n                                          <CloseIcon />\n                                        </IconButton>\n                                      }>\n                                        <img\n                                          draggable={false}\n                                          style={{ maxHeight: 40 }}\n                                          aria-label=\"upload picture\"\n                                          src={source}\n                                        />\n                                      </Badge>\n                                    </Grid>\n                                  )\n                                })}\n                                <Grid item>\n                                  <label htmlFor={`imput_${idx}`}>\n                                    <input\n                                      id={`imput_${idx}`}\n                                      type=\"file\"\n                                      multiple={false}\n                                      onChange={async (e) => {\n                                        const files = e.target.files\n                                        if (files != null && files.length > 0) {\n                                          for (let index = 0; index < files.length; index++) {\n                                            const f = files[index];\n                                            await api.fileUploader(f, currentUser?.id || \"sem_id\",\n                                              (e) => {\n                                                // const perc = e.bytesTransferred / e.totalBytes\n                                              },\n                                              console.log,\n                                              (url) => {\n                                                const parts = [...(hero?.parts || [])]\n                                                const photosURL = parts[idx].photosURL || []\n                                                parts[idx].photosURL = [...photosURL, url]\n                                                setHero({ ...hero, parts })\n                                              }\n                                            )\n                                          }\n                                        }\n                                      }}\n                                    />\n                                    <Fab\n                                      variant=\"extended\"\n                                      size=\"small\" aria-label=\"upload picture\" component=\"span\">\n                                      <AddPhotoAlternateIcon\n                                        fontSize=\"large\" />\n                                      Adicionar\n                                    </Fab>\n                                  </label>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={8}>\n                              <Grid container spacing={2}>\n                                <Grid item xs={9}>\n                                  <TextField\n                                    fullWidth\n                                    label=\"Tipo\"\n                                    variant=\"filled\"\n                                    value={partHero?.type}\n                                    onChange={(e) => {\n                                      const parts = hero.parts as IHeroPart[]\n                                      parts[idx].type = e.target.value\n                                      setHero({ ...hero, parts })\n                                    }}\n                                    select>\n                                    <MenuItem value=\"all\">Completo</MenuItem>\n                                    <MenuItem value=\"head\">Cabeça</MenuItem>\n                                    <MenuItem value=\"body\">Corpo</MenuItem>\n                                  </TextField>\n                                </Grid>\n                                <Grid item xs={3}>\n                                  <TextField\n                                    fullWidth\n                                    type=\"number\"\n                                    label=\"Intervalo\"\n                                    variant=\"filled\"\n                                    value={partHero?.interval}\n                                    onChange={(e) => {\n                                      const parts = hero.parts as IHeroPart[]\n                                      parts[idx].interval = parseInt(e.target.value)\n                                      setHero({ ...hero, parts })\n                                    }}\n                                  />\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <TextField\n                                    fullWidth\n                                    label=\"Style\"\n                                    variant=\"filled\"\n                                    value={partHero?.style}\n                                    onChange={(e) => {\n                                      const parts = hero.parts as IHeroPart[]\n                                      parts[idx].style = e.target.value\n                                      setHero({ ...hero, parts })\n                                    }}\n                                  />\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <TextField\n                                    fullWidth\n                                    label={\"ClassName\"}\n                                    variant=\"filled\"\n                                    value={partHero?.className}\n                                    onChange={(e) => {\n                                      const parts = hero.parts as IHeroPart[]\n                                      parts[idx].className = e.target.value\n                                      setHero({ ...hero, parts })\n                                    }}\n                                  />\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </CardContent>\n                        <CardActions style={{ justifyContent: \"end\" }}>\n                          <Fab\n                            onClick={(e) => {\n                              const parts = hero.parts as IHeroPart[]\n                              parts?.splice(idx, 1)\n                              setHero({ ...hero, parts })\n                            }}\n                            color=\"secondary\" size=\"small\" variant=\"extended\">\n                            Remover\n                          </Fab>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            }\n          </Grid>\n          <Grid item xs={4}>\n            <h4>Preview do Herói</h4>\n            <CardHero hero={hero} />\n          </Grid>\n        </Grid>\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSave}>Salvar</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(AddOrEditHeroModal)","import React, { useEffect, useState } from \"react\";\nimport { Container, Fab, Grid, Icon, IconButton } from \"@mui/material\";\nimport api from \"../../api\";\nimport CardHero from \"../../components/CardHero\";\nimport Title from \"../../components/Title\";\nimport { IHero, IUser } from \"../../types\";\nimport AddOrEditHeroModal from \"./addOrEditHeroModal\";\nimport { Add as AddIcon } from \"@mui/icons-material\";\n\ninterface IModal {\n  open: boolean\n  data?: IHero\n}\n\nconst Heroes = () => {\n  const [modal, setModal] = useState<IModal>({ open: false })\n  const [heroes, setHeroes] = useState<IHero[]>([])\n\n  const loadHeroes = () => {\n    api.getHeros().then(response => {\n      setHeroes(response)\n    })\n  }\n\n  useEffect(() => {\n    loadHeroes()\n  }, [])\n\n  return (\n    <>\n      <Container>\n        <Title title=\"Cadastro de Heróis\" right={(\n          <Fab size=\"small\" variant=\"extended\" onClick={() => setModal({ open: true })}>\n            <AddIcon />\n            adicionar\n          </Fab>\n        )} />\n\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n          {heroes.map(h => {\n            return (\n              <Grid item>\n                <CardHero hero={h} onClick={() => setModal({ open: true, data: h })} />\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Container>\n\n\n      {modal.open &&\n        <AddOrEditHeroModal\n          data={modal.data}\n          onHide={(r) => {\n            setModal({ open: false })\n            if (r === true) loadHeroes()\n          }}\n        />\n      }\n    </>\n  )\n}\n\n\nexport default Heroes","import React, { useState } from \"react\";\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField, Typography } from \"@mui/material\";\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\nimport api from \"../../api\";\nimport CardHero from \"../../components/CardHero\";\nimport Title from \"../../components/Title\";\nimport { IHero, IHeroPart, IUser } from \"../../types\";\nimport { cloneDeep } from 'lodash';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport { RootState } from \"../../store\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  currentUser?: IUser\n  onHide: (refresh?: boolean) => void\n  data?: IHero\n}\n\nconst BuyHeroModal = ({ onHide, data, currentUser }: Props) => {\n  const [hero, setHero] = useState(cloneDeep({ ...data, userId: currentUser?.id }))\n\n  const onBuy = async () => {\n    await api.addOrUpdateHero(hero)\n    onHide(true)\n  }\n\n  return (\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\n      <DialogTitle>\n        <Title title=\"Confirmação de compra\" />\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <CardHero hero={hero} />\n          </Grid>\n          <Grid item xs>\n            <Grid container spacing={2} style={{ marginTop: 10 }}>\n              <Grid item xs={12}>\n                <Typography variant=\"h4\">\n                  Você esta adiquirindo o herói {data?.name}\n                </Typography>\n                <Typography variant=\"h5\">\n                  Você pode renomea-lo se quiser.\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  style={{ width: 350 }}\n                  label=\"Nome do Herói\"\n                  variant=\"filled\"\n                  value={hero?.name}\n                  onChange={(e) => setHero({ ...hero, name: e.target.value })}\n                />\n              </Grid>\n              <Grid item>\n                <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\n                  <PaidIcon style={{ marginRight: 8 }} />\n                  {hero.price || \"Free\"}\n                </Fab>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={onBuy}>\n                  Comprar Agora\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n      </DialogContent>\n    </Dialog>\n  )\n}\n\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(BuyHeroModal)","import React, { useEffect, useState } from \"react\";\nimport { Card, CardActionArea, Container, Fab, Grid, Icon, IconButton, Paper } from \"@mui/material\";\nimport api from \"../../api\";\nimport CardHero from \"../../components/CardHero\";\nimport Title from \"../../components/Title\";\nimport { IHero, IUser } from \"../../types\";\nimport BuyHeroModal from \"./buyHeroModal\";\nimport PaidIcon from '@mui/icons-material/Paid';\n\ninterface IModal {\n  open: boolean\n  data?: IHero\n}\n\nconst Heroes = () => {\n  const [modal, setModal] = useState<IModal>({ open: false })\n  const [heroes, setHeroes] = useState<IHero[]>([])\n\n  const loadHeroes = () => {\n    api.getHerosToBuy().then(response => {\n      setHeroes(response)\n    })\n  }\n\n  useEffect(() => {\n    loadHeroes()\n  }, [])\n\n  return (\n    <>\n      <Container>\n        <Title title=\"Loja de Heróis\" />\n\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n          {heroes.map(h => {\n            return (\n              <Grid item>\n                <Card style={{ padding: 8 }}>\n                  <CardActionArea onClick={() => setModal({ open: true, data: h })}>\n                    <CardHero hero={h} />\n                    <div style={{ padding: 8, textAlign: \"center\" }}>\n                      <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\n                        <PaidIcon style={{ marginRight: 8 }} />\n                        {h.price || \"Free\"}\n                      </Fab>\n                    </div>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Container>\n\n\n      {modal.open &&\n        <BuyHeroModal\n          data={modal.data}\n          onHide={(r) => {\n            setModal({ open: false })\n            if (r === true) loadHeroes()\n          }}\n        />\n      }\n    </>\n  )\n}\n\n\nexport default Heroes","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { IUser } from \"../types\";\nimport GamePlay from './game1/GamePlay';\nimport Rooms from './game1/Rooms';\nimport Home from \"./home\";\nimport Admin from \"./admin\";\nimport Store from \"./store\";\n\n\n\nconst Routers = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/game1\" element={<Rooms />} />\n      <Route path=\"/game1/:id\" element={<GamePlay />} />\n      <Route path=\"/game1/admin\" element={<Admin />} />\n      <Route path=\"/game1/store\" element={<Store />} />\n    </Routes>\n  )\n}\n\n\nexport default Routers","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Login from './components/Login';\nimport ResponsiveAppBar from './components/ResponsiveAppBar';\nimport Router from './pages/router';\nimport { RootState } from './store';\nimport { IUser } from './types';\n\ninterface Props {\n  currentUser?: IUser\n}\n\nfunction App({ currentUser }: Props) {\n  if (!currentUser?.id) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <div>\n      <ResponsiveAppBar />\n      <Router />\n    </div>\n  );\n}\n\n\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\n\nexport default connect(mapStateToProps)(App)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\nimport currentUser from \"./currentUser\"\n\nexport default combineReducers({\n  currentUser\n})","import { createStore } from \"redux\"\n\nimport reducers from \"./ducks\"\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n \nconst persistedReducer = persistReducer(persistConfig, reducers)\nlet store = createStore(persistedReducer)\nlet persistor = persistStore(store)\n \nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\nexport { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\"\nimport { store, persistor } from \"./store\"\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}