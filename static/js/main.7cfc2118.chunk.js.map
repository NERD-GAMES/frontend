{"version":3,"sources":["api.ts","firebaseConfig.ts","store/ducks/currentUser.ts","components/Login.tsx","components/ResponsiveAppBar.tsx","components/HeroTransform.tsx","pages/game1/components/board.tsx","components/CardHero.tsx","pages/game1/GamePlay.tsx","components/Title.tsx","pages/game1/components/addOrEditRoomModal.tsx","pages/game1/Rooms.tsx","pages/home/index.tsx","pages/admin/addOrEditHeroModal.tsx","pages/admin/index.tsx","pages/store/buyHeroModal.tsx","pages/store/index.tsx","pages/deck/buyHeroModal.tsx","pages/deck/index.tsx","pages/router.tsx","App.tsx","reportWebVitals.ts","store/ducks/index.ts","store/index.ts","index.tsx"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","loginWithFacebookPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","user","id","uid","name","displayName","photoURL","email","loginWithGooglePopup","GoogleAuthProvider","fileUploader","file","userId","onProgress","onError","onComplete","ref","Date","getTime","storageRef","task","put","on","snapshot","getDownloadURL","urlImage","addUser","collection","doc","get","data","set","merge","gems","getUserById","setUser","onSnapshot","response","addOrUpdateHero","hero","add","createdAt","getHeros","heroesRef","getDocs","documentSnapshots","docs","map","getHerosToBuy","q","query","where","getHerosByUserId","getRoomById","setRoom","getRooms","filterRoom","orderBy","addOrUpdateRoom","room","INITIAL_STATE","createActions","setLoginAction","setLogoffAction","Types","Creators","createReducer","SET_LOGIN_ACTION","action","SET_LOGOFF_ACTION","connect","state","currentUser","dispatch","bindActionCreators","userActions","handleFacebookLogin","Api","handleGoogleLogin","Grid","container","justifyContent","alignItems","style","height","item","Button","width","variant","onClick","React","anchorElUser","setAnchorElUser","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","Typography","noWrap","component","to","Fab","size","marginRight","Tooltip","title","IconButton","e","currentTarget","p","Avatar","alt","src","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","HeroTransform","useState","infinite","setInfinite","useEffect","interval","setTimeout","Math","random","clearTimeout","parts","partHero","JSON","parse","error","draggable","photosURL","className","Board","players","cardsInBoard","onSelected","sizes","x","y","getSize","heigthList","Array","from","_","i","widthList","TableContainer","Table","backgroundImage","TableRow","backgroundColor","cell","find","h","cellPlayer","color","TableCell","padding","arrow","cursor","border","CardHero","tipo","toLocaleUpperCase","Card","CardActionArea","CardHeader","enabled","Chip","label","avatar","imgProps","CardContent","paddingTop","paddingBottom","minWidth","minHeight","margin","description","display","fontSize","attack","defense","turns","nickName","loc","useLocation","playerId","fase","turn","setTurn","heroes","setHeroes","heroSelected","setHeroSelected","showCards","setShowCards","showPlayers","setShowPlayers","currentPlayer","cardsOfCurrentUser","filter","cardsInDeck","status","cardsInHand","roomId","pathname","split","api","then","newDeck","d","_a","idx","spacing","marginTop","xs","heroSelect","_cell","Drawer","anchor","PaperProps","direction","undefined","length","disabled","Title","right","INITIAL_HERO","AddOrEditHeroModal","onHide","nav","useNavigate","onSave","newRoom","Dialog","fullWidth","DialogTitle","DialogContent","TextField","value","onChange","target","select","DialogActions","Game1Rooms","modal","setModal","rooms","setRooms","r","LinkRoute","type","tab","setTab","cloneDeep","setHero","Tabs","b","Tab","parseInt","multiline","rows","price","FormControlLabel","control","Checkbox","checked","aria-label","Add","source","idx2","Badge","badgeContent","splice","Close","maxHeight","htmlFor","multiple","files","index","f","console","log","url","Slider","valueLabelDisplay","step","marks","event","newValue","min","max","CardActions","Heroes","loadHeroes","onBuy","Routers","path","element","Rooms","GamePlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","persistConfig","key","persistedReducer","persistReducer","reducers","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7cfc2118.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport { query, where, collection, getDocs } from \"firebase/firestore\";\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/storage';\r\nimport 'firebase/compat/firestore';\r\nimport { firebaseConfig } from \"./firebaseConfig\"\r\nimport { IHero, IUser, IRoom } from './types';\r\n\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore()\r\nconst storage = firebase.storage()\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  loginWithFacebookPopup: async () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider()\r\n    let result = await app.auth().signInWithPopup(provider)\r\n    if (result.user) {\r\n      const user = {\r\n        id: result.user.uid,\r\n        name: result.user.displayName || \"\",\r\n        photoURL: result.user.photoURL || \"\",\r\n        email: result.user.email || \"\"\r\n      }\r\n      return user\r\n    }\r\n\r\n    return null\r\n\r\n  },\r\n  loginWithGooglePopup: async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    let result = await app.auth().signInWithPopup(provider)\r\n    if (result.user) {\r\n      const user = {\r\n        id: result.user.uid,\r\n        name: result.user.displayName || \"\",\r\n        photoURL: result.user.photoURL || \"\",\r\n        email: result.user.email || \"\"\r\n      }\r\n      return user\r\n    }\r\n\r\n    return null\r\n\r\n  },\r\n  fileUploader: async (file: File, userId: string, onProgress: (e: firebase.storage.UploadTaskSnapshot) => void, onError: (e: firebase.storage.FirebaseStorageError) => void, onComplete: (url: string) => void) => {\r\n    const storageRef = await storage.ref(`arquivos/${userId}/${new Date().getTime()}/${file.name}`)\r\n    const task = storageRef.put(file)\r\n    task.on(\"state_changed\", onProgress, onError, async () => {\r\n      const urlImage = await task.snapshot.ref.getDownloadURL()\r\n      onComplete(urlImage)\r\n    })\r\n  },\r\n  addUser: async (user: IUser) => {\r\n    debugger\r\n    const userDB = await (await db.collection(\"users\").doc(user.email).get()).data()\r\n    if (userDB) {\r\n      return await db.collection(\"users\").doc(user.email).set(user, { merge: true })\r\n    }\r\n    return await db.collection(\"users\").doc(user.email).set({ ...user, gems: 100 }, { merge: true })\r\n  },\r\n  getUserById: async (email: string, setUser: (user: any) => void) => {\r\n    await db.collection(\"users\").doc(email).onSnapshot((response) => {\r\n      setUser(response.data())\r\n    })\r\n  },\r\n  addOrUpdateHero: async (hero: IHero) => {\r\n    if (hero.id) {\r\n      return await db.collection(\"heroes\").doc(hero.id).set(hero, { merge: true })\r\n    } else {\r\n      return await db.collection(\"heroes\").add({ ...hero, createdAt: new Date() })\r\n    }\r\n  },\r\n  getHeros: async () => {\r\n    const heroesRef = collection(db, 'heroes');\r\n    const documentSnapshots = await getDocs(heroesRef);\r\n\r\n    return documentSnapshots.docs.map(doc => {\r\n      return {\r\n        id: doc.id, ...doc.data()\r\n      }\r\n    })\r\n  },\r\n  getHerosToBuy: async () => {\r\n    const heroesRef = collection(db, 'heroes');\r\n    const q = query(heroesRef, where(\"userId\", '==', ''), where(\"enabled\", '==', true));\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    return documentSnapshots.docs.map(doc => {\r\n      return {\r\n        id: doc.id, ...doc.data()\r\n      }\r\n    })\r\n  },\r\n  getHerosByUserId: async (userId: string) => {\r\n    const heroesRef = collection(db, 'heroes');\r\n    const q = query(heroesRef, where(\"userId\", '==', userId), where(\"enabled\", '==', true));\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    return documentSnapshots.docs.map(doc => {\r\n      return {\r\n        id: doc.id, ...doc.data()\r\n      }\r\n    })\r\n  },\r\n  getRoomById: async (id: string, setRoom: React.Dispatch<React.SetStateAction<IRoom | undefined>>) => {\r\n    await db.collection(\"rooms\").doc(id).onSnapshot((response) => {\r\n      setRoom(response.data())\r\n    })\r\n  },\r\n  getRooms: async (filterRoom: IRoom) => {\r\n    const snapshot = await db.collection(\"rooms\").orderBy(\"createdAt\", \"desc\").get()\r\n    return snapshot.docs.map(doc => {\r\n      return {\r\n        id: doc.id, ...doc.data()\r\n      }\r\n    })\r\n  },\r\n  addOrUpdateRoom: async (room: IRoom) => {\r\n    if (room.id) {\r\n      return await db.collection(\"rooms\").doc(room.id).set(room, { merge: true })\r\n    } else {\r\n      return await db.collection(\"rooms\").add({ ...room, createdAt: new Date() })\r\n    }\r\n  },\r\n}","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCdwbDAsGKQ6ji7CrEbwx_Z7CV6Ccz4AO0\",\r\n  authDomain: \"nerd-games.firebaseapp.com\",\r\n  projectId: \"nerd-games\",\r\n  storageBucket: \"nerd-games.appspot.com\",\r\n  messagingSenderId: \"1064259606654\",\r\n  appId: \"1:1064259606654:web:48cee652da9d44d6ac602f\",\r\n  measurementId: \"G-7EBMK1R3Z1\"\r\n}","import { createActions, createReducer } from \"reduxsauce\"\r\nimport { IUser } from \"../../types\";\r\n\r\nconst INITIAL_STATE: IUser = {}\r\n\r\nexport const { Types, Creators } = createActions({\r\n  setLoginAction: [\"user\"],\r\n  setLogoffAction: []\r\n})\r\n\r\nconst setLogin = (state = INITIAL_STATE, action: any) => {\r\n  debugger\r\n  return { ...action.user };\r\n}\r\n\r\nconst setLogOff = (state = INITIAL_STATE, action: any) => {\r\n  return INITIAL_STATE;\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n  [Types.SET_LOGIN_ACTION]: setLogin,\r\n  [Types.SET_LOGOFF_ACTION]: setLogOff,\r\n})","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Grid } from '@mui/material';\r\n\r\nimport Api from '../api';\r\nimport { IUser } from '../types';\r\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\r\nimport { RootState } from '../store';\r\n\r\n\r\ninterface Props {\r\n  setLoginAction: any\r\n}\r\n\r\nfunction Login({ setLoginAction }: Props) {\r\n\r\n  const handleFacebookLogin = async () => {\r\n    const user = await Api.loginWithFacebookPopup()\r\n    if (user) {\r\n      await Api.addUser(user)\r\n      Api.getUserById(user.email, setLoginAction)\r\n    }\r\n  }\r\n\r\n  const handleGoogleLogin = async () => {\r\n    const user = await Api.loginWithGooglePopup()\r\n    if (user) {\r\n      await Api.addUser(user)\r\n      Api.getUserById(user.email, setLoginAction)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ height: \"100vh\" }}>\r\n      <Grid item>\r\n        <Button\r\n          style={{ width: 300 }}\r\n          variant=\"outlined\"\r\n          onClick={handleFacebookLogin} >\r\n          Entrar Com Facebook\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          style={{ width: 300 }}\r\n          variant=\"outlined\"\r\n          onClick={handleGoogleLogin} >\r\n          Entrar Com Google\r\n        </Button>\r\n      </Grid>\r\n    </Grid >\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    setLoginAction: userActions.setLoginAction\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login)\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUser } from '../types';\r\nimport { Fab } from '@mui/material';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Creators as userActions } from \"./../store/ducks/currentUser\";\r\n\r\nconst settings = ['Sair'];\r\n\r\ninterface Props {\r\n  currentUser?: IUser,\r\n  setLogoffAction: () => void\r\n}\r\n\r\nconst ResponsiveAppBar = ({ currentUser, setLogoffAction }: Props) => {\r\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n            >\r\n              <Link to=\"/\">NERD-GAMES</Link>\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n              <PaidIcon style={{ marginRight: 8 }} />\r\n              {currentUser?.gems || 0}\r\n            </Fab>\r\n            <Tooltip title={currentUser?.name || \"\"}>\r\n              <IconButton onClick={(e) => setAnchorElUser(e.currentTarget)} sx={{ p: 0 }}>\r\n                <Avatar\r\n                  alt={currentUser?.name || \"\"}\r\n                  src={currentUser?.photoURL || \"\"}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={() => setAnchorElUser(null)}\r\n            >\r\n              <MenuItem onClick={() => {\r\n                setLogoffAction()\r\n                setAnchorElUser(null)\r\n              }}>\r\n                <Typography textAlign=\"center\">Sair</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    setLogoffAction: userActions.setLogoffAction\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResponsiveAppBar)\r\n","import { useEffect, useState } from \"react\";\r\nimport { IHero } from \"../types\";\r\nimport \"animate.css\";\r\n\r\ninterface Props {\r\n  hero: IHero;\r\n}\r\n\r\nconst HeroTransform = ({ hero }: Props) => {\r\n  const [infinite, setInfinite] = useState(true);\r\n  useEffect(() => {\r\n    const interval = setTimeout(() => {\r\n      setInfinite(!infinite)\r\n    }, Math.random() * 10000);\r\n\r\n    return () => {clearTimeout(interval)};\r\n  }, [infinite]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {hero?.parts?.map((partHero) => {\r\n        let style = {};\r\n        try {\r\n          style = JSON.parse(partHero?.style || \"\");\r\n        } catch (error) {}\r\n\r\n        return (\r\n          <img\r\n            alt=\"\"\r\n            draggable={false}\r\n            src={partHero?.photosURL && partHero?.photosURL[0]}\r\n            className={\r\n              partHero?.className && `animate__animated ${infinite && \"animate__infinite\"} ${partHero?.className}`\r\n            }\r\n            style={{\r\n              ...style,\r\n              position: \"absolute\",\r\n              width: partHero.width + \"%\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroTransform;\r\n","import {\r\n  Paper,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport HeroTransform from \"../../../components/HeroTransform\";\r\nimport { IDeckItem, IHero } from \"../../../types\";\r\nimport { IPlayer } from \"../GamePlay\";\r\ninterface Props {\r\n  players: IPlayer[];\r\n  cardsInBoard: IDeckItem[];\r\n  size?: string;\r\n  onSelected: (x: number, y: number) => void;\r\n}\r\n\r\nconst getSize = (size?: string) => {\r\n  switch (size) {\r\n    case \"xs\":\r\n      return { x: 10, y: 10 };\r\n    case \"sm\":\r\n      return { x: 20, y: 20 };\r\n    case \"md\":\r\n      return { x: 30, y: 30 };\r\n    case \"lg\":\r\n      return { x: 50, y: 50 };\r\n    case \"xl\":\r\n      return { x: 80, y: 80 };\r\n    default:\r\n      return { x: 120, y: 120 };\r\n  }\r\n};\r\n\r\nfunction Board({ players, cardsInBoard, size, onSelected }: Props) {\r\n  const sizes = getSize(size);\r\n  const heigthList = Array.from(Array(sizes.y), (_, i) => i + 1);\r\n  const widthList = Array.from(Array(sizes.x), (_, i) => i + 1);\r\n  return (\r\n    <TableContainer style={{ maxWidth: \"98vw\" }}>\r\n      <Table\r\n        size=\"small\"\r\n        style={{\r\n          backgroundImage:\r\n            \"url(https://images.tcdn.com.br/img/img_prod/607564/mural_de_parede_montanhas_1554_2_20180126155300.jpg)\",\r\n        }}\r\n      >\r\n        {heigthList.map((y) => {\r\n          return (\r\n            <TableRow>\r\n              {widthList.map((x) => {\r\n                let backgroundColor = \"\";\r\n                const cell = cardsInBoard.find((h) => h.x === x && h.y === y);\r\n                if (cell) {\r\n                  const cellPlayer = players.find((p) => p.id === cell.userId);\r\n                  if (cellPlayer) {\r\n                    backgroundColor = cellPlayer.color;\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <TableCell\r\n                    key={`cell-${x}-${y}`}\r\n                    style={{\r\n                      height: \"56px\",\r\n                      width: \"56px\",\r\n                      padding: 2,\r\n                    }}\r\n                    onClick={() => onSelected(x, y)}\r\n                  >\r\n                    <>\r\n                      {/* {x === 1 && (\r\n                      <div style={{ position: \"absolute\", marginLeft: -30 }}>\r\n                      {y}\r\n                      </div>\r\n                      )}\r\n                      {y === 1 && (\r\n                        <div style={{ position: \"absolute\", marginTop: -50 }}>\r\n                        {x}\r\n                        </div>\r\n                      )} */}\r\n\r\n                      {backgroundColor && (\r\n                        <Tooltip arrow title={cell?.name || \"teste\"}>\r\n                          <div\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              border: `2px solid ${backgroundColor}`,\r\n                            }}\r\n                          >\r\n                            <HeroTransform hero={cell as IHero} />\r\n                          </div>\r\n                        </Tooltip>\r\n                      )}\r\n                    </>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Grid,\r\n  SvgIcon,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { IHero } from \"../types\";\r\nimport HeroTransform from \"./HeroTransform\";\r\n\r\ninterface Props {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  hero: IHero;\r\n}\r\n\r\nconst CardHero = ({ onClick, hero }: Props) => {\r\n  const tipo = (hero?.tipo || \"\").toLocaleUpperCase();\r\n  return (\r\n    <Card style={{ backgroundImage: \"url(/frontend/img/bg.jpg)\" }}>\r\n      <CardActionArea onClick={onClick}>\r\n        <CardHeader\r\n          action={\r\n            !hero.enabled && (\r\n              <Chip color=\"error\" label=\"Rascunho\" variant=\"filled\" />\r\n            )\r\n          }\r\n          avatar={\r\n            <Tooltip title={tipo}>\r\n              <Avatar\r\n                style={{ width: \"2vw\", height: \"2vw\" }}\r\n                variant=\"square\"\r\n                src={`/frontend/img/${hero?.tipo}.png`}\r\n                imgProps={{\r\n                  draggable: false,\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          }\r\n          title={hero.name}\r\n        />\r\n        <CardContent style={{ paddingTop: 0, paddingBottom: 8 }}>\r\n          <div\r\n            style={{\r\n              height: \"12vw\",\r\n              minWidth: \"120px\",\r\n              width: \"12vw\",\r\n              border: \"1px solid #CCC\",\r\n              backgroundColor: \"white\",\r\n              minHeight: \"120px\",\r\n            }}\r\n          >\r\n            <HeroTransform hero={hero} />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#FFFD\",\r\n              margin: \"8px 0\",\r\n              border: \"1px solid #CCC\",\r\n              height: \"5vw\",\r\n              width: \"12vw\",\r\n              minWidth: \"120px\",\r\n              minHeight: \"50px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {hero.description}\r\n            </Typography>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Chip\r\n              style={{ fontSize: 10 }}\r\n              size=\"small\"\r\n              label={`ATK: ${hero.attack}`}\r\n            />\r\n            <Chip\r\n              style={{ fontSize: 10 }}\r\n              size=\"small\"\r\n              label={`DEF: ${hero.defense}`}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardHero;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Button, Drawer, Grid, Typography } from \"@mui/material\";\r\nimport Board from \"./components/board\";\r\nimport CardHero from \"./../../components/CardHero\";\r\nimport { IDeckItem, IUser, IHero, IRoom } from \"./../../types\";\r\nimport api from \"./../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\nexport interface IPlayer {\r\n  id: string;\r\n  nickName: string;\r\n  photoURL: string;\r\n  color: string;\r\n}\r\n\r\nconst turns = [\r\n  \"Posicione seus heróis na arena\",\r\n  \"Andar com o seu herói\",\r\n  \"Batalhar\",\r\n  \"Andar com o seu herói\",\r\n  \"Finalizar\",\r\n];\r\n\r\nconst players: IPlayer[] = [\r\n  {\r\n    id: \"yaB5gAe6UFNc3TaJwnWfnBigjKT2\",\r\n    color: \"red\",\r\n    nickName: \"Hotmail\",\r\n    photoURL: \"https://graph.facebook.com/4623448704434966/picture\",\r\n  },\r\n  {\r\n    id: \"nlw8y6cU4NhbTtrXSMvKokqNpz23\",\r\n    color: \"blue\",\r\n    nickName: \"Gamil\",\r\n    photoURL: \"\",\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\n\r\nfunction Game1Play({ currentUser }: Props) {\r\n  const loc = useLocation();\r\n  const [turn, setTurn] = useState({ playerId: players[0].id, fase: 0 });\r\n  const [room, setRoom] = useState<IRoom>();\r\n  const [heroes, setHeroes] = useState<IDeckItem[]>([]);\r\n  const [heroSelected, setHeroSelected] = useState<IDeckItem>();\r\n  const [showCards, setShowCards] = useState({ open: false });\r\n  const [showPlayers, setShowPlayers] = useState({ open: false });\r\n\r\n  const currentPlayer = players.find((x) => x.id === turn.playerId);\r\n  const cardsOfCurrentUser = (heroes || []).filter(\r\n    (x) => x.userId === currentUser?.id\r\n  );\r\n  const cardsOfCurrentPlayer = (heroes || []).filter(\r\n    (x) => x.userId === turn.playerId\r\n  );\r\n  const cardsInDeck = (cardsOfCurrentUser || []).filter((x) => x.status === 0);\r\n  const cardsInHand = (cardsOfCurrentUser || []).filter((x) => x.status === 1);\r\n  const cardsInBoard = (cardsOfCurrentUser || []).filter((x) => x.status === 2);\r\n\r\n  useEffect(() => {\r\n    const roomId = loc.pathname.split(\"/\")[2];\r\n    api.getRoomById(roomId, setRoom);\r\n  }, [loc.pathname]);\r\n\r\n  const loadHeroes = () => {\r\n    api.getHeros().then((response) => {\r\n      const deck = response as IDeckItem[];\r\n      const newDeck = deck.map((d) => {\r\n        return {\r\n          ...d,\r\n          status: 0,\r\n        };\r\n      });\r\n\r\n      setHeroes([\r\n        ...players.map((p) => {\r\n          const king: IDeckItem = {\r\n            id: p.id,\r\n            userId: p.id,\r\n            tipo: \"rei\",\r\n            status: 0,\r\n            attack: 500,\r\n            defense: 2000,\r\n            enabled: true,\r\n            name: p.nickName,\r\n            x: -1,\r\n            y: -1,\r\n            parts: [\r\n              {\r\n                photosURL: [p.photoURL],\r\n                width: 100,\r\n                className:\"animate__delay-2s animate__bounce animate__slow\"\r\n              },\r\n            ],\r\n          };\r\n          return king;\r\n        }),\r\n        ...newDeck,\r\n      ]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadHeroes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      heroSelected?.id &&\r\n      heroSelected?.status === 2 &&\r\n      heroSelected?.x &&\r\n      heroSelected?.y\r\n    ) {\r\n      setHeroes(\r\n        heroes.map((_a, idx) => {\r\n          if (_a.id === heroSelected?.id) {\r\n            return {\r\n              ..._a,\r\n              x: heroSelected?.x || -1,\r\n              y: heroSelected?.y || -1,\r\n              status: 2,\r\n            };\r\n          }\r\n          return _a;\r\n        })\r\n      );\r\n    }\r\n  }, [heroSelected?.id, heroSelected?.x, heroSelected?.y]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n          {turns[turn.fase]}\r\n        </Grid>\r\n        <Grid item>\r\n          <Board\r\n            size={room?.size}\r\n            players={players}\r\n            cardsInBoard={cardsInBoard}\r\n            onSelected={(x, y) => {\r\n              const heroSelect = heroes.find(\r\n                (_cell) => _cell.x === x && _cell.y === y\r\n              );\r\n              if (heroSelect) {\r\n                setHeroSelected(heroSelect);\r\n              } else if (heroSelected?.id) {\r\n                setHeroSelected({ ...heroSelected, x, y, status: 2 });\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            // disabled={cardsInDeck.length === 0}\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://img.elo7.com.br/product/zoom/2A58C4E/papel-de-parede-carta-baralho-poquer-jogo-cartas-barbearia-papel-de-parede.jpg)\",\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() => setShowCards({ open: true })}\r\n          >\r\n            Minha mão\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            // disabled={cardsInDeck.length === 0}\r\n            style={{\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() => setShowPlayers({ open: true })}\r\n          >\r\n            Players\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            // disabled={cardsInDeck.length === 0}\r\n            style={{\r\n              border: \"1px solid #CCC\",\r\n              width: 241 / 3,\r\n              height: 392 / 3,\r\n            }}\r\n            onClick={() =>\r\n              setTurn({\r\n                ...turn,\r\n                fase: turn.fase + 1,\r\n              })\r\n            }\r\n          >\r\n            {turns[turn.fase + 1]}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Drawer\r\n        anchor=\"left\"\r\n        PaperProps={{\r\n          style: { backgroundColor: \"#FFF5\" },\r\n        }}\r\n        open={showPlayers.open}\r\n        onClose={() => setShowPlayers({ open: false })}\r\n      >\r\n        <Grid container spacing={1} justifyContent=\"center\" direction=\"column\">\r\n          {players.map((p, idx) => {\r\n            return (\r\n              <Grid item>\r\n                <Button\r\n                  style={{\r\n                    [p.id === currentPlayer?.id\r\n                      ? \"backgroundColor\"\r\n                      : \"borderColor\"]: p.color,\r\n                    width: 300,\r\n                  }}\r\n                  variant={\r\n                    p.id === currentPlayer?.id ? \"contained\" : \"outlined\"\r\n                  }\r\n                  onClick={() => setTurn({ fase: 0, playerId: p.id })}\r\n                >\r\n                  {p.nickName}\r\n                </Button>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        anchor=\"bottom\"\r\n        PaperProps={{\r\n          style: { backgroundColor: \"#FFF5\" },\r\n        }}\r\n        open={showCards.open}\r\n        onClose={() => setShowCards({ open: false })}\r\n      >\r\n        <Grid container spacing={2} justifyContent=\"center\">\r\n          {cardsInHand.map((p, idx) => {\r\n            let border = \"5px solid #CCCCCC\";\r\n            if (heroSelected?.id === p.id) {\r\n              border = \"5px solid blue\";\r\n            }\r\n            return (\r\n              <Grid item>\r\n                <div style={{ border }}>\r\n                  <CardHero\r\n                    hero={p}\r\n                    onClick={() => {\r\n                      if (p.id === heroSelected?.id) {\r\n                        debugger;\r\n                        setHeroSelected(undefined);\r\n                      } else {\r\n                        setHeroSelected(p);\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundImage: cardsInDeck.length\r\n                  ? \"url(https://img.elo7.com.br/product/zoom/2A58C4E/papel-de-parede-carta-baralho-poquer-jogo-cartas-barbearia-papel-de-parede.jpg)\"\r\n                  : \"\",\r\n                border: \"1px solid #CCC\",\r\n                width: 241 / 3,\r\n                height: 392 / 3,\r\n              }}\r\n              disabled={cardsInDeck.length === 0}\r\n              onClick={() =>\r\n                setHeroes(\r\n                  heroes.map((_a) => {\r\n                    if (_a.id === cardsInDeck[0].id) {\r\n                      return { ..._a, status: 1 };\r\n                    }\r\n                    return _a;\r\n                  })\r\n                )\r\n              }\r\n            >\r\n              DECK\r\n              <br />\r\n              {cardsInDeck.length} cartas\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game1Play);\r\n","import { Grid, Typography } from \"@mui/material\"\r\n\r\ninterface Props {\r\n  title: string\r\n  right?: any\r\n}\r\n\r\nconst Title = ({ title, right }: Props) => {\r\n  return (\r\n    <div style={{padding:\"8px 0\"}}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {right}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Title","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, TextField } from \"@mui/material\";\r\nimport api from \"./../../../api\";\r\nimport Title from \"../../../components/Title\";\r\nimport { IRoom, IUser } from \"../../../types\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\n\r\ninterface Props {\r\n  onHide: (refresh?: boolean) => void\r\n  data?: IRoom\r\n}\r\n\r\nconst INITIAL_HERO: IRoom = {\r\n  name: \"\",\r\n  size: \"md\"\r\n}\r\n\r\nconst AddOrEditHeroModal = ({ onHide, data }: Props) => {\r\n  const nav = useNavigate()\r\n  const [room, setRoom] = useState({ ...INITIAL_HERO, ...data })\r\n\r\n  const onSave = async () => {\r\n    const newRoom = await api.addOrUpdateRoom(room) as IRoom\r\n    nav(\"/game1/\" + newRoom.id)\r\n    onHide(true)\r\n  }\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Gerar uma sala nova\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nome da Sala\"\r\n              variant=\"filled\"\r\n              value={room?.name}\r\n              onChange={(e) => setRoom({ ...room, name: e.target.value })}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Tamanho\"\r\n              variant=\"filled\"\r\n              value={room.size || \"\"}\r\n              onChange={(e) => setRoom({ ...room, size: e.target.value })}\r\n              select\r\n            >\r\n              <MenuItem value=\"xs\">Super Pequeno</MenuItem>\r\n              <MenuItem value=\"sm\">Pequeno</MenuItem>\r\n              <MenuItem value=\"md\">Médio</MenuItem>\r\n              <MenuItem value=\"lg\">Grande</MenuItem>\r\n              <MenuItem value=\"xg\">Super Grande</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onSave}>Salvar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddOrEditHeroModal","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Typography } from \"@mui/material\";\r\nimport { IRoom, IUser } from \"./../../types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport AddOrEditRoomModal from \"./components/addOrEditRoomModal\";\r\n\r\ninterface IModal {\r\n  open: boolean\r\n  data?: IRoom\r\n}\r\n\r\nconst Game1Rooms = () => {\r\n  const [modal, setModal] = useState<IModal>({ open: false })\r\n  const [rooms, setRooms] = useState<IRoom[]>([])\r\n\r\n  const loadRooms = () => {\r\n    const filter: IRoom = {}\r\n    api.getRooms(filter).then(response => {\r\n      setRooms(response)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRooms()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\"\r\n        justifyContent=\"center\" style={{ height: \"100vh\" }}>\r\n        <Grid item>\r\n          <Typography variant=\"h2\" color=\"firebrick\">\r\n            Batalha Naval Xadrez\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h5\" color=\"firebrick\">\r\n            Batalha Naval\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setModal({ open: true })}\r\n          >Nova sala</Button>\r\n        </Grid>\r\n\r\n        {rooms.map(r => {\r\n          return (\r\n            <Grid item key={r.id}>\r\n              <Link to={`/game/${r.id}`}>Sala: {r.name} ({r.id})</Link>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n\r\n      {modal.open &&\r\n        <AddOrEditRoomModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false })\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Game1Rooms","import React from \"react\";\r\nimport { Button, Grid, Link } from \"@mui/material\";\r\nimport { Link as LinkRoute } from \"react-router-dom\";\r\nimport { IUser } from \"../../types\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n}\r\n\r\nconst Home = ({ currentUser }: Props) => {\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"center\"\r\n      justifyContent=\"center\" style={{ minHeight: \"70vh\" }}>\r\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n        Ola, {currentUser?.name}\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/admin\" component={LinkRoute}>Admin</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/store\" component={LinkRoute}>Loja</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/game\" component={LinkRoute}>Batalha</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button style={{ padding: 40 }} variant=\"contained\" to=\"/deck\" component={LinkRoute}>Meus Deck</Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fab,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Paper,\r\n  Slider,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport {\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  PhotoCamera,\r\n} from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport AddPhotoAlternateIcon from \"@mui/icons-material/AddPhotoAlternate\";\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n  onHide: (refresh?: boolean) => void;\r\n  data?: IHero;\r\n}\r\n\r\nconst INITIAL_HERO: IHero = {\r\n  name: \"\",\r\n  userId: \"\",\r\n  enabled: false,\r\n  attack: 500,\r\n  defense: 400,\r\n  parts: [{ type: \"head\" }],\r\n};\r\n\r\nconst AddOrEditHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [hero, setHero] = useState(cloneDeep({ ...INITIAL_HERO, ...data }));\r\n\r\n  const onSave = async () => {\r\n    await api.addOrUpdateHero(hero);\r\n    onHide(true);\r\n  };\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Cadastro de heroi\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs>\r\n            <Tabs value={tab} onChange={(a, b) => setTab(b)}>\r\n              <Tab label=\"Gerais\"></Tab>\r\n              <Tab label=\"Montagem\"></Tab>\r\n            </Tabs>\r\n            {tab === 0 && (\r\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                <Grid item xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Nome do Herói\"\r\n                    variant=\"filled\"\r\n                    value={hero?.name}\r\n                    onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Tipo\"\r\n                    variant=\"filled\"\r\n                    value={hero.tipo || \"\"}\r\n                    onChange={(e) => setHero({ ...hero, tipo: e.target.value })}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"peao\">Peão</MenuItem>\r\n                    <MenuItem value=\"torre\">Torre</MenuItem>\r\n                    <MenuItem value=\"cavalo\">Cavalo</MenuItem>\r\n                    <MenuItem value=\"bispo\">Bispo</MenuItem>\r\n                    <MenuItem value=\"rainha\">Rainha</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Poder de Ataque\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.attack}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, attack: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Poder de Defesa\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.defense || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, defense: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={2}\r\n                    label=\"Descrição\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.description || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, description: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Preço\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    value={hero.price || \"\"}\r\n                    onChange={(e) =>\r\n                      setHero({ ...hero, price: parseInt(e.target.value) })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControlLabel\r\n                    label=\"Ativo\"\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) =>\r\n                          setHero({ ...hero, enabled: e.target.checked })\r\n                        }\r\n                        checked={hero.enabled}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            {tab === 1 && (\r\n              <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                <Grid item xs={12}>\r\n                  <Title\r\n                    title=\"Montagem\"\r\n                    right={\r\n                      <Fab\r\n                        size=\"small\"\r\n                        variant=\"extended\"\r\n                        onClick={() => {\r\n                          const parts = hero?.parts || [];\r\n                          setHero({ ...hero, parts: [...parts, {}] });\r\n                        }}\r\n                        aria-label=\"add\"\r\n                      >\r\n                        <AddIcon />\r\n                        Adiconar\r\n                      </Fab>\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {hero?.parts?.map((partHero, idx) => {\r\n                  return (\r\n                    <Grid item xs={12}>\r\n                      <Card>\r\n                        <CardContent>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={4}>\r\n                              <Grid container spacing={2}>\r\n                                {partHero?.photosURL?.map((source, idx2) => {\r\n                                  return (\r\n                                    <Grid item>\r\n                                      <Badge\r\n                                        badgeContent={\r\n                                          <IconButton\r\n                                            onClick={(e) => {\r\n                                              const parts =\r\n                                                hero.parts as IHeroPart[];\r\n                                              const photosURL =\r\n                                                parts[idx].photosURL;\r\n                                              photosURL?.splice(idx2, 1);\r\n                                              parts[idx].photosURL = photosURL;\r\n                                              setHero({ ...hero, parts });\r\n                                            }}\r\n                                          >\r\n                                            <CloseIcon />\r\n                                          </IconButton>\r\n                                        }\r\n                                      >\r\n                                        <img\r\n                                          draggable={false}\r\n                                          style={{ maxHeight: 40 }}\r\n                                          aria-label=\"upload picture\"\r\n                                          src={source}\r\n                                        />\r\n                                      </Badge>\r\n                                    </Grid>\r\n                                  );\r\n                                })}\r\n                                <Grid item>\r\n                                  <label htmlFor={`imput_${idx}`}>\r\n                                    <input\r\n                                      id={`imput_${idx}`}\r\n                                      type=\"file\"\r\n                                      multiple={false}\r\n                                      onChange={async (e) => {\r\n                                        const files = e.target.files;\r\n                                        if (files != null && files.length > 0) {\r\n                                          for (\r\n                                            let index = 0;\r\n                                            index < files.length;\r\n                                            index++\r\n                                          ) {\r\n                                            const f = files[index];\r\n                                            await api.fileUploader(\r\n                                              f,\r\n                                              currentUser?.id || \"sem_id\",\r\n                                              (e) => {\r\n                                                // const perc = e.bytesTransferred / e.totalBytes\r\n                                              },\r\n                                              console.log,\r\n                                              (url) => {\r\n                                                const parts = [\r\n                                                  ...(hero?.parts || []),\r\n                                                ];\r\n                                                const photosURL =\r\n                                                  parts[idx].photosURL || [];\r\n                                                parts[idx].photosURL = [\r\n                                                  ...photosURL,\r\n                                                  url,\r\n                                                ];\r\n                                                setHero({ ...hero, parts });\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <Fab\r\n                                      variant=\"extended\"\r\n                                      size=\"small\"\r\n                                      aria-label=\"upload picture\"\r\n                                      component=\"span\"\r\n                                    >\r\n                                      <AddPhotoAlternateIcon fontSize=\"large\" />\r\n                                      Adicionar\r\n                                    </Fab>\r\n                                  </label>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={9}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label=\"Tipo\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.type}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].type = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                    select\r\n                                  >\r\n                                    <MenuItem value=\"all\">Completo</MenuItem>\r\n                                    <MenuItem value=\"head\">Cabeça</MenuItem>\r\n                                    <MenuItem value=\"body\">Corpo</MenuItem>\r\n                                  </TextField>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    type=\"number\"\r\n                                    label=\"Intervalo\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.interval}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].interval = parseInt(\r\n                                        e.target.value\r\n                                      );\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Slider\r\n                                    aria-label=\"Temperature\"\r\n                                    value={partHero?.width}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={5}\r\n                                    marks\r\n                                    onChange={(event, newValue) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].width = newValue as number;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                    min={0}\r\n                                    max={100}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label=\"Style\"\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.style}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].style = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    label={\"ClassName\"}\r\n                                    variant=\"filled\"\r\n                                    value={partHero?.className}\r\n                                    onChange={(e) => {\r\n                                      const parts = hero.parts as IHeroPart[];\r\n                                      parts[idx].className = e.target.value;\r\n                                      setHero({ ...hero, parts });\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </CardContent>\r\n                        <CardActions style={{ justifyContent: \"end\" }}>\r\n                          <Fab\r\n                            onClick={(e) => {\r\n                              const parts = hero.parts as IHeroPart[];\r\n                              parts?.splice(idx, 1);\r\n                              setHero({ ...hero, parts });\r\n                            }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            variant=\"extended\"\r\n                          >\r\n                            Remover\r\n                          </Fab>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <h4>Preview do Herói</h4>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onSave}>Salvar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddOrEditHeroModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Fab, Grid, Icon, IconButton } from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport AddOrEditHeroModal from \"./addOrEditHeroModal\";\r\nimport { Add as AddIcon } from \"@mui/icons-material\";\r\n\r\ninterface IModal {\r\n  open: boolean\r\n  data?: IHero\r\n}\r\n\r\nconst Heroes = () => {\r\n  const [modal, setModal] = useState<IModal>({ open: false })\r\n  const [heroes, setHeroes] = useState<IHero[]>([])\r\n\r\n  const loadHeroes = () => {\r\n    api.getHeros().then(response => {\r\n      setHeroes(response)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadHeroes()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Cadastro de Heróis\" right={(\r\n          <Fab size=\"small\" variant=\"extended\" onClick={() => setModal({ open: true })}>\r\n            <AddIcon />\r\n            adicionar\r\n          </Fab>\r\n        )} />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map(h => {\r\n            return (\r\n              <Grid item>\r\n                <CardHero hero={h} onClick={() => setModal({ open: true, data: h })} />\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n\r\n      {modal.open &&\r\n        <AddOrEditHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false })\r\n            if (r === true) loadHeroes()\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Heroes","import React, { useState } from \"react\";\r\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField, Typography } from \"@mui/material\";\r\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from 'lodash';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n  onHide: (refresh?: boolean) => void\r\n  data?: IHero\r\n}\r\n\r\nconst BuyHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [hero, setHero] = useState(cloneDeep({ ...data, userId: currentUser?.id }))\r\n\r\n  const onBuy = async () => {\r\n    await api.addOrUpdateHero(hero)\r\n    onHide(true)\r\n  }\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Confirmação de compra\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\">\r\n                  Você esta adiquirindo o herói {data?.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  Você pode renomea-lo se quiser.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ width: 350 }}\r\n                  label=\"Nome do Herói\"\r\n                  variant=\"filled\"\r\n                  value={hero?.name}\r\n                  onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                  <PaidIcon style={{ marginRight: 8 }} />\r\n                  {hero.price || \"Free\"}\r\n                </Fab>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onBuy}>\r\n                  Comprar Agora\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BuyHeroModal)","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardActionArea, Container, Fab, Grid, Icon, IconButton, Paper } from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport BuyHeroModal from \"./buyHeroModal\";\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\n\r\ninterface IModal {\r\n  open: boolean\r\n  data?: IHero\r\n}\r\n\r\nconst Heroes = () => {\r\n  const [modal, setModal] = useState<IModal>({ open: false })\r\n  const [heroes, setHeroes] = useState<IHero[]>([])\r\n\r\n  const loadHeroes = () => {\r\n    api.getHerosToBuy().then(response => {\r\n      setHeroes(response)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadHeroes()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Loja de Heróis\" />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map(h => {\r\n            return (\r\n              <Grid item>\r\n                <Card style={{ padding: 8 }}>\r\n                  <CardActionArea onClick={() => setModal({ open: true, data: h })}>\r\n                    <CardHero hero={h} />\r\n                    <div style={{ padding: 8, textAlign: \"center\" }}>\r\n                      <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                        <PaidIcon style={{ marginRight: 8 }} />\r\n                        {h.price || \"Free\"}\r\n                      </Fab>\r\n                    </div>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n\r\n      {modal.open &&\r\n        <BuyHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false })\r\n            if (r === true) loadHeroes()\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Heroes","import React, { useState } from \"react\";\r\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControlLabel, Grid, IconButton, InputAdornment, MenuItem, Paper, Tab, Tabs, TextField, Typography } from \"@mui/material\";\r\nimport { Add as AddIcon, Close as CloseIcon, PhotoCamera } from \"@mui/icons-material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IHeroPart, IUser } from \"../../types\";\r\nimport { cloneDeep } from 'lodash';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport { RootState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n  onHide: (refresh?: boolean) => void\r\n  data?: IHero\r\n}\r\n\r\nconst BuyHeroModal = ({ onHide, data, currentUser }: Props) => {\r\n  const [hero, setHero] = useState(cloneDeep({ ...data, userId: currentUser?.id }))\r\n\r\n  const onBuy = async () => {\r\n    await api.addOrUpdateHero(hero)\r\n    onHide(true)\r\n  }\r\n\r\n  return (\r\n    <Dialog open maxWidth=\"lg\" fullWidth onClose={() => onHide()}>\r\n      <DialogTitle>\r\n        <Title title=\"Confirmação de compra\" />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <CardHero hero={hero} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\">\r\n                  Você esta adiquirindo o herói {data?.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  Você pode renomea-lo se quiser.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ width: 350 }}\r\n                  label=\"Nome do Herói\"\r\n                  variant=\"filled\"\r\n                  value={hero?.name}\r\n                  onChange={(e) => setHero({ ...hero, name: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Fab variant=\"extended\" size=\"small\" style={{ marginRight: 8 }} >\r\n                  <PaidIcon style={{ marginRight: 8 }} />\r\n                  {hero.price || \"Free\"}\r\n                </Fab>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onBuy}>\r\n                  Comprar Agora\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BuyHeroModal)","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  Container,\r\n  Fab,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport api from \"../../api\";\r\nimport CardHero from \"../../components/CardHero\";\r\nimport Title from \"../../components/Title\";\r\nimport { IHero, IUser } from \"../../types\";\r\nimport BuyHeroModal from \"./buyHeroModal\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\ninterface IModal {\r\n  open: boolean;\r\n  data?: IHero;\r\n}\r\n\r\ninterface Props {\r\n  currentUser?: IUser;\r\n}\r\n\r\nconst Heroes = ({ currentUser }: Props) => {\r\n  const [modal, setModal] = useState<IModal>({ open: false });\r\n  const [heroes, setHeroes] = useState<IHero[]>([]);\r\n\r\n  const loadHeroes = () => {\r\n    if (currentUser?.id) {\r\n      api.getHerosByUserId(currentUser?.id).then((response) => {\r\n        setHeroes(response);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser?.id) {\r\n      loadHeroes();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title title=\"Meus Heróis\" />\r\n\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n          {heroes.map((h) => {\r\n            return (\r\n              <Grid item>\r\n                <Card style={{ padding: 8 }}>\r\n                  <CardActionArea\r\n                    onClick={() => setModal({ open: true, data: h })}\r\n                  >\r\n                    <CardHero hero={h} />\r\n                    <div style={{ padding: 8, textAlign: \"center\" }}>\r\n                      <Fab\r\n                        variant=\"extended\"\r\n                        size=\"small\"\r\n                        style={{ marginRight: 8 }}\r\n                      >\r\n                        <PaidIcon style={{ marginRight: 8 }} />\r\n                        {h.price || \"Free\"}\r\n                      </Fab>\r\n                    </div>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n\r\n      {modal.open && (\r\n        <BuyHeroModal\r\n          data={modal.data}\r\n          onHide={(r) => {\r\n            setModal({ open: false });\r\n            if (r === true) loadHeroes();\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heroes);\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { IUser } from \"../types\";\r\nimport GamePlay from './game1/GamePlay';\r\nimport Rooms from './game1/Rooms';\r\nimport Home from \"./home\";\r\nimport Admin from \"./admin\";\r\nimport Store from \"./store\";\r\nimport Deck from \"./deck\";\r\n\r\n\r\n\r\nconst Routers = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"/game\" element={<Rooms />} />\r\n      <Route path=\"/game/:id\" element={<GamePlay />} />\r\n      <Route path=\"/admin\" element={<Admin />} />\r\n      <Route path=\"/store\" element={<Store />} />\r\n      <Route path=\"/deck\" element={<Deck />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\n\r\nexport default Routers","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './components/Login';\r\nimport ResponsiveAppBar from './components/ResponsiveAppBar';\r\nimport Router from './pages/router';\r\nimport { RootState } from './store';\r\nimport { IUser } from './types';\r\n\r\ninterface Props {\r\n  currentUser?: IUser\r\n}\r\n\r\nfunction App({ currentUser }: Props) {\r\n  if (!currentUser?.id) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveAppBar />\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\"\r\nimport currentUser from \"./currentUser\"\r\n\r\nexport default combineReducers({\r\n  currentUser\r\n})","import { createStore } from \"redux\"\r\n\r\nimport reducers from \"./ducks\"\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n \r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\nlet store = createStore(persistedReducer)\r\nlet persistor = persistStore(store)\r\n \r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport { store, persistor }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\"\r\nimport { store, persistor } from \"./store\"\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}